{"version":3,"sources":["images/illustration-pointer-med-text.png","images/symbol2.png","images/symbol1.png","images/symbol3.png","images/allatillsammans.PNG","store/actions/auth.js","components/MainHeader.js","components/IconButton.js","components/Footer.js","screens/Home.js","firebase/firebase.utils.js","screens/users/Mottaget.js","screens/users/HelpForm.js","screens/users/Apply.js","screens/info/Partners.js","screens/users/CancelForm.js","screens/users/Cancel.js","screens/users/VolunteerForm.js","screens/users/Volunteer.js","models/order.js","models/volunteer.js","components/ConfirmButtons.js","components/ConfirmationCustomer.js","components/ConfirmationInternal.js","components/RenderBadge.js","screens/tables/CellSizes.js","screens/tables/Emails.js","screens/tables/Dropdowns.js","screens/tables/Table.js","components/AddButtonHeader.js","components/RefreshButton.js","components/Chevron.js","components/Accordion.js","screens/admin/Volunteers.js","screens/admin/Orders.js","models/group.js","screens/users/GroupForm.js","screens/admin/Groups.js","models/cancellation.js","screens/admin/Cancellations.js","screens/admin/Admin.js","screens/groupAdmin/GroupOrders.js","screens/groupAdmin/GroupVolunteers.js","screens/groupAdmin/GroupAdmin.js","components/FormInput.js","components/SignInForm.js","models/adminGroup.js","screens/groupAdmin/GroupSignIn.js","screens/groupAdmin/CheckGroupAdmin.js","screens/info/HowTo.js","screens/info/Intro.js","screens/info/Contact.js","components/ProtectedRoute.js","components/Login.js","App.js","store/reducers/orders.js","store/reducers/groups.js","store/reducers/volunteers.js","store/reducers/cancellations.js","store/reducers/index.js","store/actions/orders.js","store/actions/volunteers.js","store/actions/groups.js","store/actions/cancellations.js","store/reducers/auth.js","Root.js","configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","receiveLogin","user","type","MainHeader","props","useSelector","state","auth","isAuthenticated","useDispatch","Navbar","sticky","bg","expand","to","className","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","IconButton","Button","color","outline","icon","text","Footer","target","href","Home","School","Icon1","Icon2","Icon3","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","functions","provider","GoogleAuthProvider","setCustomParameters","prompt","Apply","formReducer","action","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","Input","label","placeholder","onChange","Form","Group","controlId","Control","name","HelpForm","editedOrder","orders","availableOrders","find","ordr","useState","useSwish","setUseSwish","useCash","setUseCash","useInvoice","setUseInvoice","redirectToThanks","setRedirectToThanks","approvedConditions","setApprovedConditions","useReducer","typ","beskrivning","swish","kontant","faktura","tidsrymd","telefon","förnamn","efternamn","email","address","postkod","conditions","formState","dispatchFormState","textChangeHandler","inputIdentifier","onSubmit","e","preventDefault","collection","add","gruppId","volontärId","datum","Date","getTime","status","kommentarer","skickadBeställare","skickadGrupp","skickadVolontär","alert","as","bind","required","rows","Check","onClick","Row","Col","variant","size","block","Partners","CancelForm","Cancel","VolunteerForm","hasLicence","setHasLicence","hasCar","setHasCar","shopFood","setShopFood","shopSupplies","setShopSupplies","runErrands","setRunErrands","doAnimals","setDoAnimals","doTalking","setDoTalking","doAuthorities","setDoAuthorities","doTech","setDoTech","språk","födelseår","körkort","bil","mat","varor","ärenden","djur","prata","myndigheter","teknik","skickadVolontärTillGrupp","skickadBekräftelseTillVolontär","Volunteer","Order","this","db","ConfirmButtons","isLoading","setIsLoading","updateSent","itemId","fieldsToUpdate","a","collectionToUpdate","isConfToVol","isVolToGroupConf","doc","update","then","refreshAction","fieldToUpdateTrue","isCustomerConfirmation","isGroupConfirmation","isOrderInfoToVolunteer","fieldToUpdateFalse","ButtonToolbar","aria-label","ButtonGroup","isConfirmed","ConfirmationCustomer","data","onClickAction","ConfirmationInternal","RenderBadge","Badge","pill","bool","small","minWidth","medium","large","xlarge","sendOrderEmail","content","subject","emailBody","window","open","sendConfirmationEmail","sendGroupOrderEmail","sendVolunteerEmail","sendWelcomeEmail","sendGeneralVolunteerInfo","groupDropdown","0","Pn5Uj8h84m5pjqSmL6sA","DDPDlLcTYYMQEJNlhzgD","uID02NUmUhp9mRqZbLF1","XL6uVQ67i4pQPSQtodeU","ZHyAZgDOttiNOkvD3zb6","DiM537Vye6Wi6SRQJfHT","TmhoPLMU6XmapwTSS6Hi","R0tHIsIvM82th7Elq6zo","groupStatusDropdown","1","2","4","5","6","groupStatusDropdownForGroups","volunteerStatusDropdown","3","volunteerStatusDropdownForGroups","Table","tableData","setData","mottaget","title","field","editable","cellStyle","headerStyle","render","rowData","orderColumns","lookup","buttonText","groupOrderColumns","volunteerColumns","groupVolunteersColumns","groupColumns","länkNamn","gruppnamn","cancelledColumns","columndata","isOrders","isGroupOrders","isVolunteers","isGroupVolunteers","isGroups","newData","oldData","currDocId","adminNamn","adminPwd","kontakt","reserv","reservTelefon","reservEmail","useEffect","console","log","columns","options","paging","exportButton","draggable","localization","pagination","labelDisplayedRows","toolbar","nRowsSelected","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","onRowUpdate","Promise","resolve","updateOrder","updateVolunteer","updateGroup","updateCancelled","AddButtonHeader","show","setShow","handleClose","headerText","Modal","onHide","Header","closeButton","Body","formForModal","faSync","Chevron","viewBox","xmlns","d","fill","Accordion","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","useRef","current","scrollHeight","ref","style","maxHeight","dangerouslySetInnerHTML","__html","Volunteers","RefreshButton","Tabs","defaultActiveKey","Tab","eventKey","dbData","newVolunteers","length","groupId","distributedVolunteers","welcomedVolunteers","activeVolunteers","pausedVolunteers","notSuitableVolunteers","Orders","newOrders","assignedToGroup","doneOrders","pausedOrders","cancelledOrders","GroupForm","Groups","activeGroups","inactiveGroups","getGroups","groups","get","forEach","resData","readableDate","moment","format","push","filter","headerLink","Cancellation","Cancellations","toCancel","cancelled","getCancellations","cancellations","isCancelled","Admin","volunteersData","setVolunteersData","ordersData","setOrdersData","getOrders","getVolunteers","volunteers","GroupOrders","distributedGroupOrders","GroupVolunteers","GroupAdmin","currentGroup","groupData","setGroupData","distributedVolunteerOrders","groupOrdersData","setGroupOrdersData","groupVolunteersData","setGroupVolunteersData","getGroupOrders","currentGroupOrders","getGroupVolunteers","currentGroupVolunteers","FormInput","handleChange","otherProps","SignInForm","topHeader","handleSubmit","loginName","loginPassword","AdminGroup","länknamn","GroupSignIn","setLoginName","setLoginPassword","finalAdminData","loadedAdminData","currAdminGroupData","getAdminData","event","checkIfVerified","CheckGroupAdmin","match","params","isVerified","setIsVerified","HowTo","Intro","Contact","allaTillsammansPic","ProtectedRoute","Component","component","isVerifying","rest","pathname","from","location","connect","isLoggingIn","loginError","useLocation","setEmail","password","setPassword","dispatch","signInWithEmailAndPassword","catch","error","loginUser","require","config","path","exact","Login","initialState","availableGroups","availableVolunteers","availableCancellations","combineReducers","newOrder","orderData","concat","orderIndex","userOrders","findIndex","oid","updatedOrder","updatedAvailableOrders","order","newVolunteer","volunteerData","grupp","volunteerIndex","userVolunteers","updatedVolunteer","updatedAvailableVolunteers","volunteer","newGroup","groupIndex","userGroups","updatedGroup","updatedAvailableGroups","group","newCancellation","cancellationData","cancellationIndex","userCancellations","updatedCancellation","updatedAvailableCancellations","cancellation","isLoggingOut","logoutError","verifyingError","store","persistedState","createStore","rootReducer","applyMiddleware","thunkMiddleware","onAuthStateChanged","configureStore","Root","basename","process","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9938d53d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/illustration-pointer-med-text.a25018cd.png\";","module.exports = __webpack_public_path__ + \"static/media/symbol2.4a912ce2.png\";","module.exports = __webpack_public_path__ + \"static/media/symbol1.82a12733.png\";","module.exports = __webpack_public_path__ + \"static/media/symbol3.fb5c27ab.png\";","module.exports = __webpack_public_path__ + \"static/media/allatillsammans.56a20225.PNG\";","import firebase from \"firebase/app\";\n\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\nconst requestLogin = () => {\n    return {\n        type: LOGIN_REQUEST\n    };\n};\n\nconst receiveLogin = user => {\n    return {\n        type: LOGIN_SUCCESS,\n        user\n    };\n};\n\nconst loginError = () => {\n    return {\n        type: LOGIN_FAILURE\n    };\n};\n\nconst requestLogout = () => {\n    return {\n        type: LOGOUT_REQUEST\n    };\n};\n\nconst recieveLogout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    };\n};\n\nconst logoutError= () => {\n    return {\n        type: LOGOUT_FAILURE\n    };\n};\n\n\nconst verifyRequest = () => {\n    return {\n        type: VERIFY_REQUEST\n    };\n};\n\n\nconst verifySuccess = () => {\n    return {\n        type: VERIFY_SUCCESS\n    };\n};\n\nexport const loginUser = (email, password) => dispatch => {\n    dispatch(requestLogin());\n    firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(user => {\n            dispatch(receiveLogin(user));\n        })\n        .catch(error => {\n            console.log(error);\n            dispatch(loginError());\n        })\n};\n\nexport const logoutUser = () => dispatch => {\n    dispatch(requestLogout());\n    firebase\n        .auth()\n        .signOut()\n        .then(() => {\n            dispatch(recieveLogout());\n        })\n        .catch(error => {\n            console.log(error);\n            dispatch(logoutError());\n        })\n};\n\nexport const verifyAuth = () => dispatch => {\n    dispatch(verifyRequest());\n    firebase.auth().onAuthStateChanged(user => {\n        if (user !== null){\n            dispatch(receiveLogin(user));\n        }\n        dispatch(verifySuccess());\n    });\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutUser } from '../store/actions';\n\nexport default function MainHeader(props) {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          <div className=\"brand\">\n            <img\n              alt=\"\"\n              src=\"/logo.png\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />\n            <div className=\"text-section\">\n              <div className=\"flex\">\n                <h3 className=\"bold\">Alla Tillsammans</h3>\n                <h3>mot Covid-19</h3>\n              </div>\n              <h2>Civilsamhället i samverkan</h2>\n            </div>\n          </div>\n        </Link>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            <Link\n              id=\"sahar-funkar-det\"\n              to=\"/sahar-funkar-det\"\n              className=\"nav-link\"\n            >\n              Såhär funkar det\n            </Link>\n            <Link id=\"kontakt\" to=\"/kontakt\" className=\"nav-link\">\n              Kontakt\n            </Link>\n            <Link id=\"partners\" to=\"/partners\" className=\"nav-link\">\n              Partners\n            </Link>\n            {/* NOTE TO VISHNU: \n            Commented this out as we don't want the admin login \n            to be visible on the page which the users see. \n            The admins want to instead access their login by typing /admin after the main url. \n            I changed the prev /login to /admin in the related files and updated\n            the previous /admin to /main-admin to not point to the same route.\n            We will need to still logout of course, so awesome if we can update \n            the below with a flag to only show the logout button if the user is logged in (ie is an admin). */}\n            {/* {isAuthenticated ? (\n              <a className=\"nav-link\" onClick={() => dispatch(logoutUser())}>\n                Logga ut\n              </a>\n            ) : (\n              <Link className=\"nav-link\" to=\"/admin\">\n                Logga in\n              </Link>\n            )} */}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <div className=\"header-label\">TJÖRN</div>\n    </>\n  );\n}\n","import React from 'react';\n// reactstrap components\nimport { Button } from 'reactstrap';\n\nconst IconButton = props => {\n  return (\n    <Button className=\"large-icon-button\" color=\"dark\" outline type=\"button\">\n      <img src={props.icon} className=\"icon\" alt=\"\" />\n      {props.text}\n    </Button>\n  );\n};\n\nexport default IconButton;\n","import React from 'react';\n\nconst Footer = props => (\n  <div className=\"footer\">\n    <p className=\"bold\">EFTERLYSNINGAR:</p>\n    <p>\n      Tjörns kommuns vård- och omsorgsverksamheter har brist på skyddsmaterial{' '}\n      <a target=\"\" href=\"https://tjorn.se/skyddsutrustning\">\n        LÄS MER\n      </a>\n    </p>\n\n    <p>\n      Äldrevården i Tjörns kommun söker akut förstärkning av personal.{' '}\n      <a\n        target=\"\"\n        href=\"https://www.tjorn.se/arkiv/nyheter2020/villduvaramedochbidratillsverigesjustnuviktigastejobb.5.1e578a6216fb6758ddefc6e.html\"\n      >\n        LÄS MER\n      </a>\n    </p>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport School from './../images/illustration-pointer-med-text.png';\nimport Icon1 from './../images/symbol2.png';\nimport Icon2 from './../images/symbol1.png';\nimport Icon3 from './../images/symbol3.png';\n\nimport IconButton from './../components/IconButton';\nimport Footer from './../components/Footer';\n\nexport default function Home() {\n  return (\n    <>\n      <div>\n        <div className=\"large-button-container\">\n          <div className=\"blurb\">\n            <img src={School} className=\"school\" alt=\"\" />\n          </div>\n          <Link to={`/bestallning`}>\n            <IconButton\n              icon={Icon1}\n              text={'Jag självisolerar mig för att inte smitta andra'}\n            />\n          </Link>\n          <Link to={`/bestallning`}>\n            <IconButton\n              icon={Icon2}\n              text={\n                'Jag är riskgrupp och självisolerar för att inte bli smittad'\n              }\n            />\n          </Link>\n          <Link to={`/bli-volontar`}>\n            <IconButton icon={Icon3} text={'Jag vill bli volontär'} />\n          </Link>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\n//TODO This will be changed and hidden in the final version\nconst config = {\n  apiKey: 'AIzaSyA1U1ZqCGWk11wpBvoDj2nsbPwrLfRyqVE',\n  authDomain: 'sverige-tillsammans.firebaseapp.com',\n  databaseURL: 'https://sverige-tillsammans.firebaseio.com',\n  projectId: 'sverige-tillsammans',\n  storageBucket: 'sverige-tillsammans.appspot.com',\n  messagingSenderId: '1051712811922',\n  appId: '1:1051712811922:web:7be6a7bd7fdd3376a6474b',\n  measurementId: 'G-M0919C717V',\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n","import React from 'react';\n\nexport default function Apply() {\n  return (\n    <>\n      <div className=\"page-layout centered\">\n        <h3>Tack!</h3>\n        <p>\n          Vår samordnare kommer att kontakta dig via den email eller telefon du\n          angett. <br /> Om du vill kontakta oss når du oss på\n          tjorn@allatillsammans.se\n        </p>\n      </div>\n    </>\n  );\n}\n","// import React, { useState, useEffect, useCallback, useReducer } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\nimport React, { useState, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport firebase from '../../firebase/firebase.utils';\n// import * as ordersActions from '../../../store/actions/orders';\n\nimport Mottaget from './Mottaget';\n\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value, // From textChangeHandler = (inputIdentifier, text)\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst Input = ({ label, placeholder, value, onChange }) => (\n  <>\n    <Form.Group controlId={label}>\n      <Form.Control\n        name={label}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder ? placeholder : label}\n      />\n    </Form.Group>\n  </>\n);\n\nconst HelpForm = (props) => {\n  // const ordrId = props.route.params ? props.route.params.detailId : null; //Get the id of the currently edited order, passed from previous screen\n  const ordrId = null; //Get the id of the currently edited order, passed from previous screen\n\n  //Find order\n  const editedOrder = useSelector((state) =>\n    state.orders.availableOrders.find((ordr) => ordr.id === ordrId)\n  );\n\n  //Set states\n  const [useSwish, setUseSwish] = useState(false);\n  const [useCash, setUseCash] = useState(false);\n  const [useInvoice, setUseInvoice] = useState(false);\n  const [redirectToThanks, setRedirectToThanks] = useState(false);\n  const [approvedConditions, setApprovedConditions] = useState(false);\n\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      typ: editedOrder ? editedOrder.typ : '',\n      beskrivning: editedOrder ? editedOrder.beskrivning : '',\n      swish: editedOrder ? editedOrder.swish : '',\n      kontant: editedOrder ? editedOrder.kontant : '',\n      faktura: editedOrder ? editedOrder.faktura : '',\n      tidsrymd: editedOrder ? editedOrder.tidsrymd : '',\n      telefon: editedOrder ? editedOrder.telefon : '',\n      förnamn: editedOrder ? editedOrder.förnamn : '',\n      efternamn: editedOrder ? editedOrder.efternamn : '',\n      email: editedOrder ? editedOrder.email : '',\n      address: editedOrder ? editedOrder.address : '',\n      postkod: editedOrder ? editedOrder.postkod : '',\n      conditions: editedOrder ? editedOrder.conditions : '',\n    },\n    inputValidities: {\n      typ: editedOrder ? true : false,\n      beskrivning: editedOrder ? true : false,\n      swish: editedOrder ? true : false,\n      kontant: editedOrder ? true : false,\n      faktura: editedOrder ? true : false,\n      tidsrymd: editedOrder ? true : false,\n      telefon: editedOrder ? true : false,\n      förnamn: editedOrder ? true : false,\n      efternamn: editedOrder ? true : false,\n      email: editedOrder ? true : false,\n      address: editedOrder ? true : false,\n      postkod: editedOrder ? true : false,\n      conditions: approvedConditions,\n    },\n    formIsValid: editedOrder ? true : false,\n  });\n\n  const addUser = (e) => {\n    e.preventDefault();\n    if (!approvedConditions) {\n      alert('Det verkar som du inte läst och godkänt våra villkor');\n      return;\n    }\n    const db = firebase.firestore();\n    db.collection('orders').add({\n      gruppId: '0',\n      volontärId: '0',\n      datum: new Date().getTime(),\n      typ: formState.inputValues.typ,\n      beskrivning: formState.inputValues.beskrivning,\n      swish: useSwish,\n      kontant: useCash,\n      faktura: useInvoice,\n      tidsrymd: formState.inputValues.tidsrymd,\n      telefon: formState.inputValues.telefon,\n      förnamn: formState.inputValues.förnamn,\n      efternamn: formState.inputValues.efternamn,\n      email: formState.inputValues.email,\n      address: formState.inputValues.address,\n      postkod: formState.inputValues.postkod,\n      status: '1',\n      kommentarer: '',\n      skickadBeställare: false,\n      skickadGrupp: false,\n      skickadVolontär: false,\n    });\n    setRedirectToThanks(true);\n  };\n\n  const toggleCheckBox = () => {\n    setApprovedConditions(!approvedConditions);\n  };\n\n  //Manages validation of title input\n  const textChangeHandler = (inputIdentifier, text) => {\n    let isValid = true;\n\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: text.target.value,\n      isValid: isValid,\n      input: inputIdentifier,\n    });\n  };\n\n  if (redirectToThanks === true) {\n    return <Mottaget />;\n  }\n\n  return (\n    <div className=\"form\">\n      <Form onSubmit={addUser}>\n        <h2>Beställning</h2>\n        <p>\n          Notera att tjänsten är {''}\n          <span className=\"bold\">GRATIS</span>, enda kostnaden är om din\n          beställning i sig självt innebär någon kostnad - till exempel om du\n          vill vi ska handla. I de fallen ersätts volontären för sina utgifter\n          via antingen swish, kontanter eller faktura. Vi tar aldrig ut någon\n          avgift för själva tjänsten.\n        </p>\n        <p>\n          Vill du inte använda formuläret kan du även beställa genom att ringa{' '}\n          <span>073-3230571</span> eller maila{' '}\n          <span>tjorn@allatillsammans.se</span>\n        </p>\n        <br />\n\n        <h3>Vad behöver du hjälp med?</h3>\n        <Form.Group controlId={'typ'}>\n          <Form.Control\n            as=\"select\"\n            name={'typ'}\n            value={formState.inputValues.typ}\n            type=\"text\"\n            onChange={textChangeHandler.bind(this, 'typ')}\n            required\n          >\n            <option value=\"inget val\">Välj typ</option>\n            <option value=\"Handla/Hämta mat\">Handla / Hämta matvaror</option>\n            <option value=\"Handla/Hämta annat\">\n              Handla / Hämta annat (exempelvis paket, post, mediciner...)\n            </option>\n            <option value=\"Rådgivning för att komma igång med digital teknik\">\n              Rådgivning för att komma igång med digital teknik\n            </option>\n            <option value=\"Prata\">\n              Prata med någon (vi kan ta en telefonfika)\n            </option>\n            <option value=\"Annat ärende\">\n              Utföra annat ärende (exempelvis rasta hund)\n            </option>\n            <option value=\"Övrigt\">Övrigt / Annat</option>\n          </Form.Control>\n        </Form.Group>\n\n        <h3>Beskriv (så väl du kan) vad beställningen innebär</h3>\n        <Form.Group controlId=\"t-1\">\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            name=\"beskrivning\"\n            value={formState.inputValues.beskrivning}\n            type=\"text\"\n            onChange={textChangeHandler.bind(this, 'beskrivning')}\n            placeholder=\"Inköpslista eller annan information om din beställning.\"\n          />\n        </Form.Group>\n        <h3>\n          Om min beställning innebär kostnader (exempelvis inköp) så ersätter\n          jag volontärens utlägg via:\n        </h3>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setUseSwish(!useSwish);\n            }}\n            label=\"Swish\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setUseCash(!useCash);\n            }}\n            label=\"Kontanter\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setUseInvoice(!useInvoice);\n            }}\n            label=\"Faktura\"\n          />\n        </Form.Group>\n\n        <h3>Hur länge kan du vänta?</h3>\n        <Form.Group controlId={'tidsrymd'}>\n          <Form.Control\n            as=\"select\"\n            name={'tidsrymd'}\n            value={formState.inputValues.tidsrymd}\n            type=\"text\"\n            onChange={textChangeHandler.bind(this, 'tidsrymd')}\n            required\n          >\n            <option value=\"Inget val\">Välj</option>\n            <option value=\"Upp till två dagar\">Upp till två dagar</option>\n            <option value=\"Upp till tre dagar\">Upp till tre dagar</option>\n            <option value=\"Upp till fyra dagar\">Upp till fyra dagar</option>\n            <option value=\"Ta det när det går\">Ta det när det går</option>\n          </Form.Control>\n        </Form.Group>\n\n        <h3>Var når vi dig?</h3>\n        <Form.Row>\n          <Col>\n            <Input\n              label=\"telefon\"\n              placeholder=\"Telefon\"\n              value={formState.inputValues.telefon}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'telefon')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              label=\"email\"\n              placeholder=\"E-post\"\n              value={formState.inputValues.email}\n              type=\"email\"\n              onChange={textChangeHandler.bind(this, 'email')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <Form.Row>\n          <Col>\n            <Input\n              label=\"förnamn\"\n              placeholder=\"Förnamn (frivilligt)\"\n              value={formState.inputValues.förnamn}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'förnamn')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              label=\"efternamn\"\n              placeholder=\"Efternamn (frivilligt)\"\n              value={formState.inputValues.efternamn}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'efternamn')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <Form.Row>\n          <Col>\n            <Input\n              label=\"address\"\n              placeholder=\"Address\"\n              value={formState.inputValues.address}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'address')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              label=\"postkod\"\n              placeholder=\"Postkod (frivilligt)\"\n              value={formState.inputValues.postkod}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'postkod')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <p>\n            <span>INFORMATION FÖR DIN TRYGGHET:</span> I och med att du skickar\n            oss din beställning så godkänner du att vi tillfälligt sparar dina\n            kontaktuppgifter. Vi säljer naturligtvis aldrig dina uppgifter och\n            vi lämnar dom inte vidare till annan part. Innehållet i din\n            beställning är endast synlig för vår samordnare och för den\n            volontärgruppledare som ansvarar för att hantera den.\n          </p>\n          <Form.Check\n            type=\"checkbox\"\n            onClick={toggleCheckBox}\n            label=\"Jag har läst ovan och godkänner att mina uppgifter lagras och att min information är synlig för volontärplattformens samordnare samt en gruppledare under tiden som min beställning hanteras.\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"secondary\" size=\"lg\" block>\n          Skicka\n        </Button>\n        <br />\n        <h4>Du kommer bli kontaktad av en samordnare så snart som möjligt</h4>\n      </Form>\n    </div>\n  );\n};\n\nexport default HelpForm;\n","import React from 'react';\n\nimport HelpForm from './HelpForm';\n\nexport default function Apply() {\n  return (\n    <>\n      <div className=\"page-layout\">\n        <HelpForm />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Partners() {\n  return (\n    <div className=\"page-layout\">\n      <h2> Partners och samverkande organisationer</h2>\n      <p>\n        Beställningstjänsten ALLA TILLSAMMANS drivs av frivilliga krafter i\n        civilsamhällets organisationer på Tjörn i dialog med Tjörns kommun och\n        med stöd från lokalt näringsliv.\n      </p>\n      <p>Medverkande organisationer är:</p>\n      <ul>\n        <li>\n          <a href=\"https://www.svenskakyrkan.se/tjorn\">Svenska Kyrkan Tjörn</a>\n        </li>\n        <li>\n          <a href=\"https://kommun.redcross.se/tjorn/\">Tjörns Röda Korskrets</a>\n        </li>\n        <li>\n          <a href=\"https://www.facebook.com/raddabarnentjorn/\">\n            Rädda Barnen Tjörns\n          </a>\n        </li>\n        <li>\n          <a href=\"http://www.lionstjorn.org/\">Lions Club</a>\n        </li>\n        <li>\n          <a href=\"https://www.egnahemsfabriken.se\">Egnahemsfabriken</a>\n        </li>\n        <li>\n          <a href=\"https://www.omstallningtjorn.se/\">Omställning Tjörn</a>\n        </li>\n        <li>\n          <a href=\"https://www.facebook.com/Agapes-v%C3%A4nner-evenemang-STO-204569240323939/\">\n            Agapes vänner\n          </a>\n        </li>\n      </ul>\n      <br />\n\n      <p>\n        Representerar du en organisation eller förening på Tjörn som vill bidra\n        till den lokala volontärsplattformen för stöd i samband med utbrottet av\n        Covid-19?\n      </p>\n      <p>Kontakta oss på tjorn@allatillsammans.se</p>\n    </div>\n  );\n}\n","import React, { useState, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport firebase from '../../firebase/firebase.utils';\n\nimport Mottaget from './Mottaget';\n\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value, // From textChangeHandler = (inputIdentifier, text)\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst Input = ({ label, placeholder, value, onChange }) => (\n  <>\n    <Form.Group controlId={label}>\n      <Form.Control\n        name={label}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder ? placeholder : label}\n      />\n    </Form.Group>\n  </>\n);\n\nconst CancelForm = (props) => {\n  const ordrId = null; //TODO: Get the id of the currently edited order, passed from previous screen\n\n  //Find order\n  const editedOrder = useSelector((state) =>\n    state.orders.availableOrders.find((ordr) => ordr.id === ordrId)\n  );\n\n  //Set states\n  const [redirectToThanks, setRedirectToThanks] = useState(false);\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      telefon: editedOrder ? editedOrder.telefon : '',\n      email: editedOrder ? editedOrder.email : '',\n      address: editedOrder ? editedOrder.address : '',\n      postkod: editedOrder ? editedOrder.postkod : '',\n    },\n    inputValidities: {\n      telefon: editedOrder ? true : false,\n      email: editedOrder ? true : false,\n      address: editedOrder ? true : false,\n      postkod: editedOrder ? true : false,\n    },\n    formIsValid: editedOrder ? true : false,\n  });\n\n  const addCancellation = (e) => {\n    e.preventDefault();\n\n    const db = firebase.firestore();\n    db.collection('cancellations').add({\n      telefon: formState.inputValues.telefon,\n      email: formState.inputValues.email,\n      address: formState.inputValues.address,\n      postkod: formState.inputValues.postkod,\n      datum: new Date().getTime(),\n      status: 'avboka',\n    });\n    setRedirectToThanks(true);\n  };\n\n  //Manages validation of title input\n  const textChangeHandler = (inputIdentifier, text) => {\n    let isValid = true;\n\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: text.target.value,\n      isValid: isValid,\n      input: inputIdentifier,\n    });\n  };\n\n  if (redirectToThanks === true) {\n    return <Mottaget />;\n  }\n\n  return (\n    <div className=\"form\">\n      <Form onSubmit={addCancellation}>\n        <h2>Avboka en beställning här</h2>\n        <br />\n        <h3>Kontaktuppgifter till dig så vi kan hitta din beställning</h3>\n        <Form.Row>\n          <Col>\n            <Input\n              label=\"telefon\"\n              placeholder=\"Telefon\"\n              value={formState.inputValues.telefon}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'telefon')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              label=\"email\"\n              placeholder=\"E-post (frivilligt)\"\n              value={formState.inputValues.email}\n              type=\"email\"\n              onChange={textChangeHandler.bind(this, 'email')}\n              required\n            />\n          </Col>\n        </Form.Row>\n\n        <Form.Row>\n          <Col>\n            <Input\n              label=\"address\"\n              placeholder=\"Address\"\n              value={formState.inputValues.address}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'address')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              label=\"postkod\"\n              placeholder=\"Postkod\"\n              value={formState.inputValues.postkod}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'postkod')}\n              required\n            />\n          </Col>\n        </Form.Row>\n\n        <Button type=\"submit\" variant=\"secondary\" size=\"lg\" block>\n          Skicka\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default CancelForm;\n","import React from 'react';\n\nimport CancelForm from './CancelForm';\n\nexport default function Cancel() {\n  return (\n    <>\n      <div className=\"page-layout\">\n        <CancelForm />\n      </div>\n    </>\n  );\n}\n","import React, { useState, useReducer } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport firebase from '../../firebase/firebase.utils';\n\nimport Mottaget from './Mottaget';\n\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value, // From textChangeHandler = (inputIdentifier, text)\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst Input = ({ label, placeholder, value, onChange }) => (\n  <>\n    <Form.Group controlId={label}>\n      <Form.Control\n        name={label}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder ? placeholder : label}\n      />\n    </Form.Group>\n  </>\n);\n\nconst VolunteerForm = (props) => {\n  const [approvedConditions, setApprovedConditions] = useState(false);\n\n  // const voluntrId = props.route.params ? props.route.params.detailId : null; //Get the id of the currently edited Volunteer, passed from previous screen\n\n  //Find Volunteer\n  // const editedVolunteer = useSelector(state =>\n  //   state.volunteers.availableVolunteers.find(\n  //     voluntr => voluntr.id === voluntrId\n  //   )\n  // );\n  const editedVolunteer = false;\n\n  //Set states\n\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n  const [redirectToThanks, setRedirectToThanks] = useState(false);\n  const [hasLicence, setHasLicence] = useState(false);\n  const [hasCar, setHasCar] = useState(false);\n  const [shopFood, setShopFood] = useState(false);\n  const [shopSupplies, setShopSupplies] = useState(false);\n  const [runErrands, setRunErrands] = useState(false);\n  const [doAnimals, setDoAnimals] = useState(false);\n  const [doTalking, setDoTalking] = useState(false);\n  const [doAuthorities, setDoAuthorities] = useState(false);\n  const [doTech, setDoTech] = useState(false);\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      förnamn: editedVolunteer ? editedVolunteer.förnamn : '',\n      efternamn: editedVolunteer ? editedVolunteer.efternamn : '',\n      telefon: editedVolunteer ? editedVolunteer.telefon : '',\n      email: editedVolunteer ? editedVolunteer.email : '',\n      address: editedVolunteer ? editedVolunteer.address : '',\n      postkod: editedVolunteer ? editedVolunteer.postkod : '',\n      beskrivning: editedVolunteer ? editedVolunteer.beskrivning : '',\n      språk: editedVolunteer ? editedVolunteer.språk : '',\n      födelseår: editedVolunteer ? editedVolunteer.födelseår : '',\n      körkort: editedVolunteer ? editedVolunteer.körkort : '',\n      bil: editedVolunteer ? editedVolunteer.bil : '',\n      mat: editedVolunteer ? editedVolunteer.mat : '',\n      varor: editedVolunteer ? editedVolunteer.varor : '',\n      ärenden: editedVolunteer ? editedVolunteer.ärenden : '',\n      djur: editedVolunteer ? editedVolunteer.djur : '',\n      prata: editedVolunteer ? editedVolunteer.prata : '',\n      myndigheter: editedVolunteer ? editedVolunteer.myndigheter : '',\n      teknik: editedVolunteer ? editedVolunteer.teknik : '',\n    },\n    inputValidities: {\n      förnamn: editedVolunteer ? true : false,\n      efternamn: editedVolunteer ? true : false,\n      telefon: editedVolunteer ? true : false,\n      email: editedVolunteer ? true : false,\n      address: editedVolunteer ? true : false,\n      postkod: editedVolunteer ? true : false,\n      beskrivning: editedVolunteer ? true : false,\n      språk: editedVolunteer ? true : false,\n      födelseår: editedVolunteer ? true : false,\n      körkort: editedVolunteer ? true : false,\n      bil: editedVolunteer ? true : false,\n      mat: editedVolunteer ? true : false,\n      varor: editedVolunteer ? true : false,\n      ärenden: editedVolunteer ? true : false,\n      djur: editedVolunteer ? true : false,\n      prata: editedVolunteer ? true : false,\n      myndigheter: editedVolunteer ? true : false,\n      teknik: editedVolunteer ? true : false,\n    },\n    formIsValid: editedVolunteer ? true : false,\n  });\n\n  const addVolunteer = (e) => {\n    e.preventDefault();\n    if (!approvedConditions) {\n      alert('Det verkar som du inte läst och godkänt våra villkor');\n      return;\n    }\n    const db = firebase.firestore();\n    db.collection('volunteers').add({\n      förnamn: formState.inputValues.förnamn,\n      efternamn: formState.inputValues.efternamn,\n      telefon: formState.inputValues.telefon,\n      email: formState.inputValues.email,\n      address: formState.inputValues.address,\n      postkod: formState.inputValues.postkod,\n      beskrivning: formState.inputValues.beskrivning,\n      språk: formState.inputValues.språk,\n      födelseår: formState.inputValues.födelseår,\n      körkort: hasLicence,\n      bil: hasCar,\n      mat: shopFood,\n      varor: shopSupplies,\n      ärenden: runErrands,\n      djur: doAnimals,\n      prata: doTalking,\n      myndigheter: doAuthorities,\n      teknik: doTech,\n      gruppId: '0',\n      datum: new Date().getTime(),\n      status: '1',\n      skickadVolontärTillGrupp: false,\n      skickadBekräftelseTillVolontär: false,\n    });\n    setRedirectToThanks(true);\n  };\n\n  const toggleCheckBox = () => {\n    setApprovedConditions(!approvedConditions);\n  };\n\n  //Manages validation of title input\n  const textChangeHandler = (inputIdentifier, text) => {\n    let isValid = true;\n\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: text.target.value,\n      isValid: isValid,\n      input: inputIdentifier,\n    });\n  };\n\n  if (redirectToThanks === true) {\n    return <Mottaget />;\n  }\n\n  return (\n    <div className=\"form\">\n      <Form onSubmit={addVolunteer}>\n        <h2>Jag vill bli volontär</h2>\n        <p>\n          Tillsammans kan vi begränsa smittspridningen av Covid – 19 och skydda\n          utsatta grupper. Men vi behöver hjälpas åt! Kan du tänka dig att\n          hjälpa till som volontär på Tjörn? Anmäl dig genom det här formuläret\n          så kommer du snart att bli kontaktad av en av våra gruppledare.\n        </p>\n        <br />\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Förnamn\"\n              label=\"förnamn\"\n              value={formState.inputValues.förnamn}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'förnamn')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"Efternamn\"\n              label=\"efternamn\"\n              value={formState.inputValues.efternamn}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'efternamn')}\n              required\n            />\n          </Col>\n        </Form.Row>\n\n        <h3>Var når vi dig?</h3>\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Telefon\"\n              label=\"telefon\"\n              value={formState.inputValues.telefon}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'telefon')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"e-post (frivilligt)\"\n              label=\"email\"\n              value={formState.inputValues.email}\n              type=\"email\"\n              onChange={textChangeHandler.bind(this, 'email')}\n              required\n            />\n          </Col>\n        </Form.Row>\n\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Address\"\n              label=\"address\"\n              value={formState.inputValues.address}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'address')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"Postkod\"\n              label=\"postkod\"\n              value={formState.inputValues.postkod}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'postkod')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <h3>Beskriv dig själv</h3>\n        <Form.Group controlId=\"t-1\">\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            placeholder=\"Jag åker till affären en gång i veckan, kan hämta upp något när jag ändå är där\"\n            name=\"beskrivning\"\n            value={formState.inputValues.beskrivning}\n            type=\"text\"\n            onChange={textChangeHandler.bind(this, 'beskrivning')}\n          />\n        </Form.Group>\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Jag talar/förstår följande språk\"\n              label=\"språk\"\n              value={formState.inputValues.språk}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'språk')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"Födelseår\"\n              label=\"födelseår\"\n              value={formState.inputValues.födelseår}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'födelseår')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setHasLicence(!hasLicence);\n            }}\n            label=\"Jag har körkort\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setHasCar(!hasCar);\n            }}\n            label=\"Jag har egen bil\"\n          />\n        </Form.Group>\n\n        <h3>Exempel på uppgifter jag kan utföra:</h3>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setShopFood(!shopFood);\n            }}\n            label=\"Handla matvaror och djurmat\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setShopSupplies(!shopSupplies);\n            }}\n            label=\"Hämta och lämna paket, post, mediciner\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setRunErrands(!runErrands);\n            }}\n            label=\"Göra andra ärenden\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setDoAnimals(!doAnimals);\n            }}\n            label=\"Rasta djur\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setDoTalking(!doTalking);\n            }}\n            label=\"Vara tillgänglig för att prata\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setDoAuthorities(!doAuthorities);\n            }}\n            label=\"Hjälpa till med vård/myndighetskontakter och rådgivning\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            onClick={() => {\n              setDoTech(!doTech);\n            }}\n            label=\"Hjälpa till att sätta upp teknologi (beställa online, etc)\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <p>\n            <span>INFORMATION FÖR DIN TRYGGHET:</span> I och med att du skickar\n            oss din anmälan så godkänner du att vi sparar dina kontaktuppgifter.\n            Vi säljer naturligtvis aldrig dina uppgifter och vi lämnar dom inte\n            vidare till annan part.\n          </p>\n          <Form.Check\n            type=\"checkbox\"\n            onClick={toggleCheckBox}\n            label=\"Jag godkänner att mina\n            uppgifter lagras och att min information är tillgänglig för\n            volontärplattformens samordnare samt en gruppledare.\"\n          />\n          <br />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"secondary\" size=\"lg\" block>\n          Skicka\n        </Button>\n        <br />\n        <h4>Du kommer bli kontaktad av en samordnare så snart som möjligt</h4>\n      </Form>\n    </div>\n  );\n};\n\nexport default VolunteerForm;\n","import React from 'react';\n\nimport VolunteerForm from './VolunteerForm';\n\nexport default function Volunteer() {\n  return (\n    <>\n      <div className=\"page-layout\">\n        <VolunteerForm />\n      </div>\n    </>\n  );\n}\n","class Order {\n  constructor(\n    id,\n    gruppId,\n    volontärId,\n    datum,\n    typ,\n    beskrivning,\n    swish,\n    kontant,\n    faktura,\n    tidsrymd,\n    telefon,\n    förnamn,\n    efternamn,\n    email,\n    address,\n    postkod,\n    status,\n    kommentarer,\n    skickadBeställare,\n    skickadGrupp,\n    skickadVolontär\n  ) {\n    this.id = id;\n    this.gruppId = gruppId;\n    this.volontärId = volontärId;\n    this.datum = datum;\n    this.typ = typ;\n    this.beskrivning = beskrivning;\n    this.swish = swish;\n    this.kontant = kontant;\n    this.faktura = faktura;\n    this.tidsrymd = tidsrymd;\n    this.telefon = telefon;\n    this.förnamn = förnamn;\n    this.efternamn = efternamn;\n    this.email = email;\n    this.address = address;\n    this.postkod = postkod;\n    this.status = status;\n    this.kommentarer = kommentarer;\n    this.skickadBeställare = skickadBeställare;\n    this.skickadGrupp = skickadGrupp;\n    this.skickadVolontär = skickadVolontär;\n  }\n}\n\nexport default Order;\n","class Volunteer {\n  constructor(\n    id,\n    gruppId,\n    förnamn,\n    efternamn,\n    telefon,\n    email,\n    address,\n    postkod,\n    beskrivning,\n    språk,\n    födelseår,\n    körkort,\n    bil,\n    mat,\n    varor,\n    ärenden,\n    djur,\n    prata,\n    myndigheter,\n    teknik,\n    datum,\n    status,\n    kommentarer,\n    skickadVolontärTillGrupp,\n    skickadBekräftelseTillVolontär\n  ) {\n    this.id = id;\n    this.gruppId = gruppId;\n    this.förnamn = förnamn;\n    this.efternamn = efternamn;\n    this.telefon = telefon;\n    this.email = email;\n    this.address = address;\n    this.postkod = postkod;\n    this.beskrivning = beskrivning;\n    this.språk = språk;\n    this.födelseår = födelseår;\n    this.körkort = körkort;\n    this.bil = bil;\n    this.mat = mat;\n    this.varor = varor;\n    this.ärenden = ärenden;\n    this.djur = djur;\n    this.prata = prata;\n    this.myndigheter = myndigheter;\n    this.teknik = teknik;\n    this.datum = datum;\n    this.status = status;\n    this.kommentarer = kommentarer;\n    this.skickadVolontärTillGrupp = skickadVolontärTillGrupp;\n    this.skickadBekräftelseTillVolontär = skickadBekräftelseTillVolontär;\n  }\n}\n\nexport default Volunteer;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst db = firebase.firestore();\n\nconst ConfirmButtons = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function updateSent(itemId, fieldsToUpdate) {\n    setIsLoading(true);\n    const collectionToUpdate =\n      props.isConfToVol || props.isVolToGroupConf ? 'volunteers' : 'orders';\n    db.collection(collectionToUpdate)\n      .doc(itemId)\n      .update(fieldsToUpdate)\n      .then(() => {\n        props.refreshAction().then(() => {\n          setIsLoading(false);\n        });\n      });\n  }\n\n  let fieldToUpdateTrue = props.isCustomerConfirmation\n    ? {\n        skickadBeställare: true,\n      }\n    : props.isGroupConfirmation\n    ? {\n        skickadGrupp: true,\n      }\n    : props.isOrderInfoToVolunteer\n    ? {\n        skickadVolontär: true,\n      }\n    : props.isConfToVol\n    ? {\n        skickadBekräftelseTillVolontär: true,\n      }\n    : props.isVolToGroupConf\n    ? {\n        skickadVolontärTillGrupp: true,\n      }\n    : null;\n\n  let fieldToUpdateFalse = props.isCustomerConfirmation\n    ? {\n        skickadBeställare: false,\n      }\n    : props.isGroupConfirmation\n    ? {\n        skickadGrupp: false,\n      }\n    : props.isOrderInfoToVolunteer\n    ? {\n        skickadVolontär: false,\n      }\n    : props.isConfToVol\n    ? {\n        skickadBekräftelseTillVolontär: false,\n      }\n    : props.isVolToGroupConf\n    ? {\n        skickadVolontärTillGrupp: false,\n      }\n    : null;\n\n  return (\n    <ButtonToolbar aria-label=\"Toolbar with button groups\">\n      {isLoading ? (\n        <div className=\"loader\">Ändrar...</div>\n      ) : (\n        <ButtonGroup className=\"mr-2\" aria-label=\"confirmation\">\n          <Button\n            onClick={updateSent.bind(this, props.itemId, fieldToUpdateTrue)}\n            className={\n              props.isConfirmed ? 'confirm-button-active yes' : 'confirm-button'\n            }\n          >\n            {props.isCustomerConfirmation || props.isConfToVol\n              ? 'Kontaktad'\n              : 'Skickad'}\n          </Button>\n          <Button\n            onClick={updateSent.bind(this, props.itemId, fieldToUpdateFalse)}\n            className={\n              !props.isConfirmed ? 'confirm-button-active no' : 'confirm-button'\n            }\n          >\n            {props.isCustomerConfirmation || props.isConfToVol\n              ? 'Inte kontaktad'\n              : 'inte Skickad'}\n          </Button>\n        </ButtonGroup>\n      )}\n    </ButtonToolbar>\n  );\n};\n\nexport default ConfirmButtons;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ConfirmButtons from './ConfirmButtons';\n\nconst ConfirmationCustomer = (props) => (\n  <div className=\"flex-column\">\n    <ConfirmButtons\n      itemId={props.data.id}\n      refreshAction={props.refreshAction}\n      isConfirmed={props.isConfirmed}\n      isCustomerConfirmation={props.isCustomerConfirmation}\n      isConfToVol={props.isConfToVol}\n      isVolToGroupConf={props.isVolToGroupConf}\n    />\n    {!props.isConfirmed ? (\n      <>\n        {props.data.email ? (\n          <Button\n            onClick={props.onClickAction}\n            className=\"small-button top-margin\"\n          >\n            Skicka bekräftelse\n          </Button>\n        ) : (\n          <div className=\"confirmation-text\">Kontakta {props.data.telefon}</div>\n        )}\n      </>\n    ) : null}\n  </div>\n);\n\nexport default ConfirmationCustomer;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ConfirmButtons from './ConfirmButtons';\n\nconst ConfirmationInternal = (props) => (\n  <div className=\"flex-column\">\n    <ConfirmButtons\n      itemId={props.itemId}\n      refreshAction={props.refreshAction}\n      isConfirmed={props.isConfirmed}\n      isGroupConfirmation={props.isGroupConfirmation}\n      isVolToGroupConf={props.isVolToGroupConf}\n      isOrderInfoToVolunteer={props.isOrderInfoToVolunteer}\n    />\n    {!props.isConfirmed ? (\n      <Button onClick={props.onClickAction} className=\"small-button top-margin\">\n        Skicka detaljer\n      </Button>\n    ) : null}\n  </div>\n);\n\nexport default ConfirmationInternal;\n","import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\n\nconst RenderBadge = props => (\n  <Badge pill variant={props.bool ? 'success' : 'secondary'}>\n    {props.bool ? 'JA' : 'NEJ'}\n  </Badge>\n);\n\nexport default RenderBadge;\n","//Custom cell sizes\n\nexport const small = {\n  width: 130,\n  minWidth: 130,\n};\n\nexport const medium = {\n  width: 175,\n  minWidth: 175,\n};\n\nexport const large = {\n  width: 300,\n  minWidth: 300,\n};\n\nexport const xlarge = {\n  width: 350,\n  minWidth: 350,\n};\n","export const sendOrderEmail = (content) => {\n  const email = `EMAIL TILL GRUPPLEDARE HÄR, tjorn@allatillsammans.se`;\n  const subject = `Ny beställning från ${\n    content.förnamn ? content.förnamn : ''\n  } ${content.efternamn ? content.efternamn : ''}`;\n  const emailBody = `\n  %0A \n  %0A \n  ************ KLIPP IN RELEVANT EMAIL ADDRESS I ADDRESSFÄLTET OVAN, RADERA SEN DET HÄR ************: \n  %0A \n  %0A \n  Yttre Grupp Norra Tjörn: helena.johannesson@svenskakyrkan.se, catharina.schonback@svenskakyrkan.se\n  %0A \n  %0A \n  Yttre Grupp Skärhamn: gunilla.e.gustafsson@svenskakyrkan.se, jaana.pollari.lindstrom@svenskakyrkan.se\n  %0A \n  %0A \n  Yttre Grupp Centrala Tjörn: maria.eriksson1@svenskakyrkan.se, erika.andersson@svenskakyrkan.se, josefin.ulmfelt@svenskakyrkan.se\n  %0A \n  %0A \n  Yttre Grupp Mjörn: erik@egnahemsfabriken.se\n  %0A \n  %0A \n  Yttre Grupp Rönnäng: se kontakt under 'grupper'\n  %0A \n  %0A \n  ************************************************************************************************\n  Hej! %0A\n    %0A \n    Ni har fått in en ny beställning till er volontärgrupp från Alla Tillsammans: \n    %0A \n    %0A\n    --------------------------------------------\n    %0A\n    %0A\n    Datum mottaget: ${content.datum ? content.datum : '-'}, \n    %0A\n    Tid kan vänta: ${content.tidsrymd ? content.tidsrymd : '-'} \n    %0A \n    %0A\n    Förnamn: ${content.förnamn ? content.förnamn : ''} \n    %0A\n    Efternamn: ${content.efternamn ? content.efternamn : ''} \n    %0A\n    Email: ${content.email ? content.email : '-'} \n    %0A\n    Telefon: ${content.telefon ? content.telefon : '-'} \n    %0A\n    Address: ${content.address ? content.address : '-'} \n    %0A\n    Postkod: ${content.postkod ? content.postkod : '-'} \n    %0A\n    ${content.kommentarer ? `%0A Kommentarer: ${content.kommentarer} %0A` : ''} \n    %0A\n    Typ: ${content.typ ? content.typ : 'Ingen'} \n    %0A\n    Beskrivning: %0A ${content.beskrivning ? content.beskrivning : '-'} \n    %0A\n    %0A\n    Swish: ${content.swish ? 'Ja' : 'Nej'} \n    %0A\n    Kontant: ${content.kontant ? 'Ja' : 'Nej'} \n    %0A\n    Faktura: ${content.faktura ? 'Ja' : 'Nej'} \n    %0A\n    %0A\n    --------------------------------------------\n    %0A\n    %0A\n    Gå in på er sida (kontakta tjorn@allatillsammans.se om ni behöver adressen/login) \n    %0A\n    Hitta alla detaljer om beställningen där, och information om nästa steg! \n    %0A\n    %0A\n    Låt mig veta om ni har några frågor! %0A\n    Vänliga hälsningar, \n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n  `;\n  window.open('mailto:' + email + '?subject=' + subject + '&body=' + emailBody);\n};\n\nexport const sendConfirmationEmail = (content) => {\n  const email = `${\n    content.email\n      ? content.email\n      : `INGEN EMAIL - RING ISTÄLLET ${content.telefon}`\n  }, tjorn@allatillsammans.se`;\n  const subject =\n    'Alla Tillsammans - Er beställning har fördelats till volontärgrupp!';\n  const emailBody = `Hej ${content.förnamn ? content.förnamn : ''}! %0A\n    %0A \n    Er beställning på https://tjorn.allatillsammans.se har mottagits och fördelats till volontärgruppen: \n    %0A \n    %0A \n    ************ RADERA DE SOM INTE ÄR AKTUELLA NEDAN ************: \n    %0A \n    %0A\n    YTTRE GRUPP NORRA TJÖRN\n    %0A\n    Gruppledare: Catharina Schönbeck, Helena Johannesson\n    %0A\n    Telefon: 0733-230587, 0733-230571\n    %0A\n    %0A\n    YTTRE GRUPP SKÄRHAMN\n    %0A\n    Gruppledare: Gunilla Gustafsson, Jaana Pollari Lindström\n    %0A\n    Telefon: 0733-230514, 0733- 230506\n    %0A\n    %0A\n    YTTRE GRUPP CENTRALA TJÖRN\n    %0A\n    Gruppledare: Maria Eriksson,  Erika Andersson, Josefin Ulmfelt\n    %0A\n    Telefon: 0733-230515, 0733230535, 0733-23053\n    %0A\n    %0A\n    YTTRE GRUPP MJÖRN\n    %0A\n    Gruppledare: Erik Berg\n    %0A\n    Telefon: 0703-022574\n    %0A\n    %0A\n    YTTRE GRUPP RÖNNÄNG: se kontakt under 'grupper'\n    %0A \n    %0A \n    ***************************************************************************\n    %0A\n    %0A\n    Så snart vi har möjlighet kommer en volontär från gruppen att kontakta er för att utföra ärendet.\n    %0A\n    %0A\n    Med vänliga hälsningar,\n    %0A\n    Volontärplattform Tjörn - civilsamhället i samverkan\n    %0A\n    %0A\n    Anna Berglund\n    %0A\n    Samordnare\n    %0A\n    tjorn@allatillsammans.se\n    %0A\n    %0A\n    %0A\n    %0A\n    KOPIA AV DIN BESTÄLLNING:\n    %0A\n    --------------------------------------------\n    %0A\n    %0A\n    Datum mottaget: ${content.datum ? content.datum : '-'}, \n    %0A\n    Tid kan vänta: ${content.tidsrymd ? content.tidsrymd : '-'} \n    %0A \n    %0A\n    Förnamn: ${content.förnamn ? content.förnamn : ''} \n    %0A\n    Efternamn: ${content.efternamn ? content.efternamn : ''} \n    %0A\n    Email: ${content.email ? content.email : '-'} \n    %0A\n    Telefon: ${content.telefon ? content.telefon : '-'} \n    %0A\n    Address: ${content.address ? content.address : '-'} \n    %0A\n    Postkod: ${content.postkod ? content.postkod : '-'} \n    %0A\n    %0A\n    Typ: ${content.typ ? content.typ : 'Ingen'} \n    %0A\n    Beskrivning: %0A ${content.beskrivning ? content.beskrivning : '-'} \n    %0A\n    %0A\n    Swish: ${content.swish ? 'Ja' : 'Nej'} \n    %0A\n    Kontant: ${content.kontant ? 'Ja' : 'Nej'} \n    %0A\n    Faktura: ${content.faktura ? 'Ja' : 'Nej'} \n    %0A\n    %0A\n    --------------------------------------------\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n  `;\n  window.open('mailto:' + email + '?subject=' + subject + '&body=' + emailBody);\n};\n\nexport const sendGroupOrderEmail = (content) => {\n  const email = `EMAIL TILL VOLONTÄR HÄR, tjorn@allatillsammans.se`;\n  const subject = `Ny beställning att utföra: ${\n    content.förnamn ? content.förnamn : ''\n  } ${content.efternamn ? content.efternamn : ''}`;\n  const emailBody = `Hej! \n    %0A\n    %0A \n    Jag har satt upp dig som volontär för att utföra nedan beställning. Kontakta gärna mig om du har några frågor!\n    %0A \n    %0A\n    -------------------------------------------- \n    %0A\n    %0A\n    Datum mottaget: ${content.datum ? content.datum : '-'}, \n    %0A\n    Tid kan vänta: ${content.tidsrymd ? content.tidsrymd : '-'} \n    %0A \n    %0A\n    Förnamn: ${content.förnamn ? content.förnamn : ''} \n    %0A\n    Efternamn: ${content.efternamn ? content.efternamn : ''} \n    %0A\n    Email: ${content.email ? content.email : '-'} \n    %0A\n    Telefon: ${content.telefon ? content.telefon : '-'} \n    %0A\n    Address: ${content.address ? content.address : '-'} \n    %0A\n    Postkod: ${content.postkod ? content.postkod : '-'} \n    %0A\n    ${content.kommentarer ? `%0A Kommentarer: ${content.kommentarer} %0A` : ''} \n    %0A\n    Typ: ${content.typ ? content.typ : 'Ingen'} \n    %0A\n    Beskrivning: %0A ${content.beskrivning ? content.beskrivning : '-'} \n    %0A\n    %0A\n    Swish: ${content.swish ? 'Ja' : 'Nej'} \n    %0A\n    Kontant: ${content.kontant ? 'Ja' : 'Nej'} \n    %0A\n    Faktura: ${content.faktura ? 'Ja' : 'Nej'} \n    %0A\n    %0A\n    --------------------------------------------\n    %0A\n    %0A\n    Vänliga hälsningar,\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n  `;\n  window.open('mailto:' + email + '?subject=' + subject + '&body=' + emailBody);\n};\n\nexport const sendVolunteerEmail = (content) => {\n  const email = `EMAIL TILL GRUPPLEDARE HÄR, tjorn@allatillsammans.se`;\n  const subject = `Ny volontär: ${content.förnamn ? content.förnamn : ''} ${\n    content.efternamn ? content.efternamn : ''\n  }`;\n  const emailBody = `\n  ************ KLIPP IN RELEVANT EMAIL ADDRESS I ADDRESSFÄLTET OVAN, RADERA SEN DET HÄR ************: \n  %0A \n  %0A \n  Yttre Grupp Norra Tjörn: helena.johannesson@svenskakyrkan.se, catharina.schonback@svenskakyrkan.se\n  %0A \n  %0A \n  Yttre Grupp Skärhamn: gunilla.e.gustafsson@svenskakyrkan.se, jaana.pollari.lindstrom@svenskakyrkan.se\n  %0A \n  %0A \n  Yttre Grupp Centrala Tjörn: maria.eriksson1@svenskakyrkan.se, erika.andersson@svenskakyrkan.se, josefin.ulmfelt@svenskakyrkan.se\n  %0A \n  %0A \n  Yttre Grupp Mjörn: erik@egnahemsfabriken.se\n  %0A \n  %0A \n  Yttre Grupp Rönnäng: se kontakt under 'grupper'\n  %0A \n  %0A \n  ************************************************************************************************\n  %0A \n  %0A \n  %0A \n  \n  Hej! \n  %0A\n    %0A \n    Ni har fått in en ny volontär till er volontärgrupp från Alla Tillsammans: \n    %0A\n    %0A \n    --------------------------------------------\n    %0A\n    %0A\n    Datum mottaget: ${content.datum ? content.datum : '-'}, %0A\n    %0A\n    Förnamn: ${content.förnamn ? content.förnamn : ''} %0A\n    Efternamn: ${content.efternamn ? content.efternamn : ''} %0A\n    Email: ${content.email ? content.email : '-'} %0A\n    Telefon: ${content.telefon ? content.telefon : '-'} %0A\n    Address: ${content.address ? content.address : '-'} %0A\n    Postkod: ${content.postkod ? content.postkod : '-'} %0A\n    ${content.kommentarer ? `%0A Kommentarer: ${content.kommentarer} %0A` : ''} \n    %0A\n    Beskrivning: %0A ${content.beskrivning ? content.beskrivning : '-'} %0A\n    %0A\n    Födelseår: ${content.födelseår ? content.födelseår : '-'} %0A\n    Språk: ${content.språk ? content.språk : '-'} %0A\n    %0A\n    Körkort: ${content.körkort ? 'Ja' : 'Nej'} %0A\n    Bil: ${content.bil ? 'Ja' : 'Nej'} %0A\n    %0A\n    Mat: ${content.mat ? 'Ja' : 'Nej'} %0A\n    Varor: ${content.varor ? 'Ja' : 'Nej'} %0A\n    Ärenden: ${content.ärenden ? 'Ja' : 'Nej'} %0A\n    Djur: ${content.djur ? 'Ja' : 'Nej'} %0A\n    Prat: ${content.prata ? 'Ja' : 'Nej'} %0A\n    Myndigheter: ${content.myndigheter ? 'Ja' : 'Nej'} %0A\n    Teknik: ${content.teknik ? 'Ja' : 'Nej'} %0A\n    %0A\n    --------------------------------------------\n    %0A\n    %0A\n    %0A\n    Gå in på er sida (kontakta tjorn@allatillsammans.se om ni behöver adressen/login) och hitta alla detaljer om nästa steg där.\n    %0A\n    %0A\n    Allt gott! \n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n  `;\n  window.open('mailto:' + email + '?subject=' + subject + '&body=' + emailBody);\n};\n\nexport const sendWelcomeEmail = (content) => {\n  const email = `${\n    content.email\n      ? content.email\n      : `INGEN EMAIL - RING ISTÄLLET ${content.telefon}`\n  }, tjorn@allatillsammans.se`;\n  const subject = 'Välkommen till Alla Tillsammans - Tjörn!';\n  const emailBody = `Hej ${content.förnamn ? content.förnamn : ''} ${\n    content.efternamn ? content.efternamn : ''\n  }, välkommen till Alla Tillsammans - Tjörn! \n    %0A\n    %0A\n    Vi har tagit emot din anmälan om att som volontär hjälpa människor med sin vardag mot covid-19. Tack!\n    %0A\n    %0A\n    Du har blivit uppsatt på gruppen nedan. Du kommer snart bli kontaktad av någon därifrån för att träffas och checka av innan det blir avstamp.\n    %0A\n    %0A \n    %0A \n    ************ RADERA DE SOM INTE ÄR AKTUELLA NEDAN ************: \n    %0A \n    %0A\n    YTTRE GRUPP NORRA TJÖRN\n    %0A\n    Gruppledare: Catharina Schönbeck, Helena Johannesson\n    %0A\n    Telefon: 0733-230587, 0733-230571\n    %0A\n    %0A\n    YTTRE GRUPP SKÄRHAMN\n    %0A\n    Gruppledare: Gunilla Gustafsson, Jaana Pollari Lindström\n    %0A\n    Telefon: 0733-230514, 0733- 230506\n    %0A\n    %0A\n    YTTRE GRUPP CENTRALA TJÖRN\n    %0A\n    Gruppledare: Maria Eriksson,  Erika Andersson, Josefin Ulmfelt\n    %0A\n    Telefon: 0733-230515, 0733230535, 0733-23053\n    %0A\n    %0A\n    YTTRE GRUPP MJÖRN\n    %0A\n    Gruppledare: Erik Berg\n    %0A\n    Telefon: 0703-022574\n    %0A\n    %0A\n    YTTRE GRUPP RÖNNÄNG: se kontakt under 'grupper'\n    %0A \n    %0A \n    ***************************************************************************\n    %0A\n    %0A\n    Om du har några frågor under tiden, kontakta gärna gruppledaren ovan eller tjorn@allatillsammans.se!\n    %0A\n    %0A\n    Allt gott! \n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n  `;\n  window.open('mailto:' + email + '?subject=' + subject + '&body=' + emailBody);\n};\n\nexport const sendGeneralVolunteerInfo = (content) => {\n  const email = `EMAIL TILL DEN SOM SKA HANTERA VOLONTÄREN HÄR, tjorn@allatillsammans.se`;\n  const subject = `Ny volontär: ${content.förnamn ? content.förnamn : ''} ${\n    content.efternamn ? content.efternamn : ''\n  }`;\n  const emailBody = `Hej! %0A\n    %0A \n    Här kommer informationen om volontären! %0A \n    %0A\n    Datum mottaget: ${content.datum ? content.datum : '-'}, %0A\n    %0A\n    Förnamn: ${content.förnamn ? content.förnamn : ''} %0A\n    Efternamn: ${content.efternamn ? content.efternamn : ''} %0A\n    Email: ${content.email ? content.email : '-'} %0A\n    Telefon: ${content.telefon ? content.telefon : '-'} %0A\n    Address: ${content.address ? content.address : '-'} %0A\n    Postkod: ${content.postkod ? content.postkod : '-'} %0A\n    ${content.kommentarer ? `%0A Kommentarer: ${content.kommentarer} %0A` : ''} \n    %0A\n    Beskrivning: %0A ${content.beskrivning ? content.beskrivning : '-'} %0A\n    %0A\n    Födelseår: ${content.födelseår ? content.födelseår : '-'} %0A\n    Språk: ${content.språk ? content.språk : '-'} %0A\n    %0A\n    Körkort: ${content.körkort ? 'Ja' : 'Nej'} %0A\n    Bil: ${content.bil ? 'Ja' : 'Nej'} %0A\n    %0A\n    Mat: ${content.mat ? 'Ja' : 'Nej'} %0A\n    Varor: ${content.varor ? 'Ja' : 'Nej'} %0A\n    Ärenden: ${content.ärenden ? 'Ja' : 'Nej'} %0A\n    Djur: ${content.djur ? 'Ja' : 'Nej'} %0A\n    Prat: ${content.prata ? 'Ja' : 'Nej'} %0A\n    Myndigheter: ${content.myndigheter ? 'Ja' : 'Nej'} %0A\n    Teknik: ${content.teknik ? 'Ja' : 'Nej'} %0A\n    %0A\n    --------------------------------------------\n    %0A\n    %0A\n    Allt gott! \n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n    %0A\n  `;\n  window.open('mailto:' + email + '?subject=' + subject + '&body=' + emailBody);\n};\n","export const groupDropdown = {\n  0: 'Ingen grupp vald',\n  Pn5Uj8h84m5pjqSmL6sA: 'Yttre Grupp Skärhamn',\n  DDPDlLcTYYMQEJNlhzgD: 'Yttre Grupp Norra Tjörn',\n  uID02NUmUhp9mRqZbLF1: 'Yttre Grupp Centrala Tjörn',\n  XL6uVQ67i4pQPSQtodeU: 'Yttre Grupp Rönnäng',\n  ZHyAZgDOttiNOkvD3zb6: 'Yttre Grupp Mjörn',\n  DiM537Vye6Wi6SRQJfHT: 'Direkthantering',\n  TmhoPLMU6XmapwTSS6Hi: 'Inre grupp',\n  R0tHIsIvM82th7Elq6zo: 'Kommunikatörerna',\n};\n\nexport const groupStatusDropdown = {\n  1: 'Ny',\n  2: 'Fördelad till grupp',\n  // 3: 'fördelad-volontär', //TBD\n  4: 'Klar',\n  5: 'Pausad',\n  6: 'Avbokad',\n};\n\nexport const groupStatusDropdownForGroups = {\n  // 1: 'ny',\n  2: 'Att bli utförd',\n  // 3: 'fördelad-volontär', //TBD\n  4: 'Klar',\n  5: 'Pausad',\n  6: 'Avbokad',\n};\n\nexport const volunteerStatusDropdown = {\n  1: 'Ny',\n  2: 'Fördelad till grupp',\n  3: 'Välkomnad',\n  4: 'Aktiv',\n  5: 'Pausad',\n  6: 'Olämplig',\n};\n\nexport const volunteerStatusDropdownForGroups = {\n  // 1: 'Ny',\n  2: 'Att bli välkomnad',\n  3: 'Välkomnad',\n  4: 'Aktiv',\n  5: 'Pausad',\n  6: 'Olämplig',\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MaterialTable from 'material-table';\nimport Button from 'react-bootstrap/Button';\n\nimport ConfirmationCustomer from '../../components/ConfirmationCustomer';\nimport ConfirmationInternal from '../../components/ConfirmationInternal';\n\nimport RenderBadge from './../../components/RenderBadge';\n\nimport { small, medium, large, xlarge } from './CellSizes';\nimport {\n  sendOrderEmail,\n  sendConfirmationEmail,\n  sendGroupOrderEmail,\n  sendVolunteerEmail,\n  sendGeneralVolunteerInfo,\n  sendWelcomeEmail,\n} from './Emails';\nimport {\n  groupDropdown,\n  groupStatusDropdown,\n  groupStatusDropdownForGroups,\n  volunteerStatusDropdown,\n  volunteerStatusDropdownForGroups,\n} from './Dropdowns';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n//TODO: make below leaner, and split into more components\nconst Table = (props) => {\n  const [data, setData] = useState(props.tableData);\n\n  //Common fields\n  const mottaget = { title: 'Mottaget', field: 'datum', editable: 'never' };\n  const förnamn = {\n    title: 'Förnamn',\n    field: 'förnamn',\n    editable: 'never',\n  };\n  const efternamn = {\n    title: 'Efternamn',\n    field: 'efternamn',\n    editable: 'never',\n  };\n  const tidsrymd = {\n    title: 'Tid kan vänta',\n    field: 'tidsrymd',\n    editable: 'never',\n    cellStyle: small,\n    headerStyle: small,\n  };\n  const kommentarer = {\n    title: 'Kommentarer (skriv extra info här)',\n    field: 'kommentarer',\n    cellStyle: large,\n    headerStyle: large,\n  };\n  const beskrivning = {\n    title: 'Beskrivning',\n    field: 'beskrivning',\n    editable: 'never',\n    cellStyle: xlarge,\n    headerStyle: xlarge,\n  };\n  const typ = {\n    title: 'Typ',\n    field: 'typ',\n    editable: 'never',\n    cellStyle: medium,\n    headerStyle: medium,\n  };\n  const swish = {\n    title: 'Swish',\n    field: 'swish',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.swish} />,\n  };\n  const kontant = {\n    title: 'Kontant',\n    field: 'kontant',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.kontant} />,\n  };\n  const faktura = {\n    title: 'Faktura',\n    field: 'faktura',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.faktura} />,\n  };\n  const telefon = { title: 'Telefon', field: 'telefon' };\n  const email = { title: 'Email', field: 'email' };\n  const address = {\n    title: 'Address',\n    field: 'address',\n    cellStyle: medium,\n    headerStyle: medium,\n  };\n  const postkod = { title: 'Postkod', field: 'postkod' };\n  const språk = { title: 'Språk', field: 'språk', editable: 'never' };\n  const födelseår = {\n    title: 'Födelseår',\n    field: 'födelseår',\n    editable: 'never',\n  };\n  const körkort = {\n    title: 'Har körkort',\n    field: 'körkort',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.körkort} />,\n  };\n  const bil = {\n    title: 'Har bil',\n    field: 'bil',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.bil} />,\n  };\n  const mat = {\n    title: 'Mat',\n    field: 'mat',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.mat} />,\n  };\n  const varor = {\n    title: 'Varor',\n    field: 'varor',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.varor} />,\n  };\n  const ärenden = {\n    title: 'Ärenden',\n    field: 'ärenden',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.ärenden} />,\n  };\n  const djur = {\n    title: 'Djur',\n    field: 'djur',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.djur} />,\n  };\n  const prata = {\n    title: 'Prata',\n    field: 'prata',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.prata} />,\n  };\n  const myndigheter = {\n    title: 'Myndigheter',\n    field: 'myndigheter',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.myndigheter} />,\n  };\n  const teknik = {\n    title: 'Teknik',\n    field: 'teknik',\n    editable: 'never',\n    render: (rowData) => <RenderBadge bool={rowData.teknik} />,\n  };\n\n  //Column headers\n  const orderColumns = [\n    mottaget,\n    tidsrymd,\n    förnamn,\n    efternamn,\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: groupStatusDropdown,\n      cellStyle: small,\n      headerStyle: small,\n    },\n    {\n      title: 'Grupp',\n      field: 'gruppId',\n      lookup: groupDropdown,\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    {\n      title: 'Detaljer till grupp',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationInternal\n          isGroupConfirmation={true}\n          itemId={rowData.id}\n          isConfirmed={rowData.skickadGrupp}\n          refreshAction={props.refreshAction}\n          onClickAction={sendOrderEmail.bind(this, rowData)}\n        />\n      ),\n    },\n    {\n      title: 'Bekräftelse till beställare',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationCustomer\n          isCustomerConfirmation={true}\n          buttonText=\"Skicka bekräftelse\"\n          refreshAction={props.refreshAction}\n          onClickAction={sendConfirmationEmail.bind(this, rowData)}\n          isConfirmed={rowData.skickadBeställare}\n          data={rowData}\n        />\n      ),\n    },\n    {\n      title: 'Detaljer till volontär',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationInternal\n          isOrderInfoToVolunteer={true}\n          itemId={rowData.id}\n          isConfirmed={rowData.skickadVolontär}\n          refreshAction={props.refreshAction}\n          onClickAction={sendGroupOrderEmail.bind(this, rowData)}\n        />\n      ),\n    },\n    kommentarer,\n    beskrivning,\n    typ,\n    swish,\n    kontant,\n    faktura,\n    telefon,\n    email,\n    address,\n    postkod,\n  ];\n\n  const groupOrderColumns = [\n    mottaget,\n    tidsrymd,\n    förnamn,\n    efternamn,\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: groupStatusDropdownForGroups,\n      cellStyle: small,\n      headerStyle: small,\n    },\n    {\n      title: 'Grupp',\n      field: 'gruppId',\n      editable: 'never',\n      lookup: groupDropdown,\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    {\n      title: 'Bekräftelse till beställare',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationCustomer\n          isCustomerConfirmation={true}\n          refreshAction={props.refreshAction}\n          onClickAction={sendConfirmationEmail.bind(this, rowData)}\n          isConfirmed={rowData.skickadBeställare}\n          data={rowData}\n        />\n      ),\n    },\n    {\n      title: 'Detaljer till volontär',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationInternal\n          isOrderInfoToVolunteer={true}\n          itemId={rowData.id}\n          isConfirmed={rowData.skickadVolontär}\n          refreshAction={props.refreshAction}\n          onClickAction={sendGroupOrderEmail.bind(this, rowData)}\n        />\n      ),\n    },\n    kommentarer,\n    beskrivning,\n    typ,\n    swish,\n    kontant,\n    faktura,\n    telefon,\n    email,\n    address,\n    postkod,\n  ];\n\n  const volunteerColumns = [\n    mottaget,\n    förnamn,\n    efternamn,\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: volunteerStatusDropdown,\n      cellStyle: small,\n      headerStyle: small,\n    },\n    {\n      title: 'Grupp',\n      field: 'gruppId',\n      lookup: groupDropdown,\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    {\n      title: 'Detaljer till grupp',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationInternal\n          isVolToGroupConf={true}\n          itemId={rowData.id}\n          isConfirmed={rowData.skickadVolontärTillGrupp}\n          refreshAction={props.refreshAction}\n          onClickAction={sendVolunteerEmail.bind(this, rowData)}\n        />\n      ),\n    },\n    {\n      title: 'Bekräftelse till volontär',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationCustomer\n          isConfToVol={true}\n          refreshAction={props.refreshAction}\n          onClickAction={sendWelcomeEmail.bind(this, rowData)}\n          isConfirmed={rowData.skickadBekräftelseTillVolontär}\n          data={rowData}\n        />\n      ),\n    },\n    {\n      title: 'Kopiera detaljer',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <Button\n          onClick={sendGeneralVolunteerInfo.bind(this, rowData)}\n          className=\"small-button\"\n          size=\"sm\"\n        >\n          Kopiera detaljer\n        </Button>\n      ),\n    },\n    kommentarer,\n    beskrivning,\n    telefon,\n    email,\n    address,\n    postkod,\n    språk,\n    födelseår,\n    körkort,\n    bil,\n    mat,\n    varor,\n    ärenden,\n    djur,\n    prata,\n    myndigheter,\n    teknik,\n  ];\n\n  const groupVolunteersColumns = [\n    mottaget,\n    förnamn,\n    efternamn,\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: volunteerStatusDropdownForGroups,\n      cellStyle: small,\n      headerStyle: small,\n    },\n    {\n      title: 'Grupp',\n      field: 'gruppId',\n      editable: 'never',\n      lookup: groupDropdown,\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    {\n      title: 'Bekräftelse till volontär',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <ConfirmationCustomer\n          isConfToVol={true}\n          refreshAction={props.refreshAction}\n          onClickAction={sendWelcomeEmail.bind(this, rowData)}\n          isConfirmed={rowData.skickadBekräftelseTillVolontär}\n          data={rowData}\n        />\n      ),\n    },\n    {\n      title: 'Kopiera detaljer',\n      field: 'skicka',\n      cellStyle: medium,\n      headerStyle: medium,\n      editable: 'never',\n      render: (rowData) => (\n        <Button\n          onClick={sendGeneralVolunteerInfo.bind(this, rowData)}\n          className=\"small-button\"\n          size=\"sm\"\n        >\n          Kopiera detaljer\n        </Button>\n      ),\n    },\n    kommentarer,\n    beskrivning,\n    telefon,\n    email,\n    address,\n    postkod,\n    språk,\n    födelseår,\n    körkort,\n    bil,\n    mat,\n    varor,\n    ärenden,\n    djur,\n    prata,\n    myndigheter,\n    teknik,\n  ];\n\n  const groupColumns = [\n    {\n      title: 'Gruppnamn',\n      field: 'gruppnamn',\n      render: (rowData) => (\n        <Link to={`/grupp/${rowData.länkNamn}/${rowData.id}`}>\n          {rowData.gruppnamn}\n        </Link>\n      ),\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    {\n      title: 'Beskrivning',\n      field: 'kommentarer',\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    {\n      title: 'Kontakt',\n      field: 'kontakt',\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    telefon,\n    {\n      title: 'Email',\n      field: 'email',\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    {\n      title: 'Reserv',\n      field: 'reserv',\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    { title: 'Reserv telefon', field: 'reservTelefon' },\n    {\n      title: 'Reserv email',\n      field: 'reservEmail',\n      cellStyle: medium,\n      headerStyle: medium,\n    },\n    address,\n    postkod,\n    { title: 'Skapad', field: 'datum', editable: 'never' },\n    { title: 'adminNamn', field: 'adminNamn' },\n    { title: 'adminPwd', field: 'adminPwd' },\n  ];\n\n  const cancelledColumns = [\n    mottaget,\n    kommentarer,\n    telefon,\n    email,\n    address,\n    postkod,\n  ];\n\n  //Set column headers depending on which screen we are in.\n  const columndata = props.isOrders\n    ? orderColumns\n    : props.isGroupOrders\n    ? groupOrderColumns\n    : props.isVolunteers\n    ? volunteerColumns\n    : props.isGroupVolunteers\n    ? groupVolunteersColumns\n    : props.isGroups\n    ? groupColumns\n    : cancelledColumns;\n\n  //Prep firestore\n  const db = firebase.firestore();\n\n  //Update existing order\n  async function updateOrder(newData, oldData) {\n    const currDocId = newData.id;\n    let orderRef = db.collection('orders').doc(currDocId);\n\n    orderRef.update({\n      gruppId: newData.gruppId ? newData.gruppId : '',\n      volontärId: newData.volontärId ? newData.volontärId : '',\n      datum: newData.datum ? newData.datum : '',\n      typ: newData.typ ? newData.typ : 'Ingen',\n      beskrivning: newData.beskrivning ? newData.beskrivning : '',\n      swish: newData.swish ? newData.swish : false,\n      kontant: newData.kontant ? newData.kontant : false,\n      faktura: newData.faktura ? newData.faktura : false,\n      tidsrymd: newData.tidsrymd ? newData.tidsrymd : '',\n      telefon: newData.telefon ? newData.telefon : '',\n      förnamn: newData.förnamn ? newData.förnamn : '',\n      efternamn: newData.efternamn ? newData.efternamn : '',\n      email: newData.email ? newData.email : '',\n      address: newData.address ? newData.address : '',\n      postkod: newData.postkod ? newData.postkod : '',\n      status: newData.status ? newData.status : '',\n      kommentarer: newData.kommentarer ? newData.kommentarer : '',\n    });\n  }\n\n  //Update existing volunteer\n  async function updateVolunteer(newData, oldData) {\n    const currDocId = newData.id;\n    let volunteerRef = db.collection('volunteers').doc(currDocId);\n\n    volunteerRef.update({\n      gruppId: newData.gruppId ? newData.gruppId : '',\n      förnamn: newData.förnamn ? newData.förnamn : '',\n      efternamn: newData.efternamn ? newData.efternamn : '',\n      telefon: newData.telefon ? newData.telefon : '',\n      email: newData.email ? newData.email : '',\n      address: newData.address ? newData.address : '',\n      postkod: newData.postkod ? newData.postkod : '',\n      beskrivning: newData.beskrivning ? newData.beskrivning : '',\n      språk: newData.språk ? newData.språk : '',\n      födelseår: newData.födelseår ? newData.födelseår : '',\n      körkort: newData.körkort ? newData.körkort : false,\n      bil: newData.bil ? newData.bil : false,\n      mat: newData.mat ? newData.mat : false,\n      varor: newData.varor ? newData.varor : false,\n      ärenden: newData.ärenden ? newData.ärenden : false,\n      djur: newData.djur ? newData.djur : false,\n      prata: newData.prata ? newData.prata : false,\n      myndigheter: newData.myndigheter ? newData.myndigheter : false,\n      teknik: newData.teknik ? newData.teknik : false,\n      datum: newData.datum ? newData.datum : '',\n      status: newData.status ? newData.status : '1',\n      kommentarer: newData.kommentarer ? newData.kommentarer : '',\n    });\n  }\n\n  //Update existing group\n  async function updateGroup(newData, oldData) {\n    const currDocId = newData.id;\n    let groupRef = db.collection('groups').doc(currDocId);\n\n    groupRef.update({\n      datum: newData.datum ? newData.datum : '',\n      gruppnamn: newData.gruppnamn ? newData.gruppnamn : '',\n      adminNamn: newData.adminNamn ? newData.adminNamn : '',\n      adminPwd: newData.adminPwd ? newData.adminPwd : '',\n      kontakt: newData.kontakt ? newData.kontakt : '',\n      kommentarer: newData.kommentarer ? newData.kommentarer : '',\n      telefon: newData.telefon ? newData.telefon : '',\n      email: newData.email ? newData.email : '',\n      reserv: newData.reserv ? newData.reserv : '',\n      reservTelefon: newData.reservTelefon ? newData.reservTelefon : '',\n      reservEmail: newData.reservEmail ? newData.reservEmail : '',\n      address: newData.address ? newData.address : '',\n      postkod: newData.postkod ? newData.postkod : '',\n      status: newData.status ? newData.status : '1',\n    });\n  }\n\n  //Update existing cancellation\n  async function updateCancelled(newData, oldData) {\n    const currDocId = newData.id;\n    let cancelledRef = db.collection('cancellations').doc(currDocId);\n\n    cancelledRef.update({\n      datum: newData.datum ? newData.datum : '',\n      telefon: newData.telefon ? newData.telefon : '',\n      email: newData.email ? newData.email : '',\n      address: newData.address ? newData.address : '',\n      postkod: newData.postkod ? newData.postkod : '',\n      status: newData.status ? newData.status : '1',\n    });\n  }\n\n  //Re-render if the data passed to the table changes - which it should do if we edit a row\n  useEffect(() => {\n    console.log('data has changed - rerendering');\n    setData(props.tableData);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.tableData]);\n\n  return (\n    <MaterialTable\n      title=\"\"\n      columns={columndata}\n      data={data}\n      options={{\n        paging: true,\n        exportButton: true,\n        draggable: true,\n      }}\n      localization={{\n        pagination: {\n          labelDisplayedRows: '{from}-{to} av {count}',\n        },\n        toolbar: {\n          nRowsSelected: '{0} rader valda',\n        },\n        header: {\n          actions: ' ',\n        },\n        body: {\n          emptyDataSourceMessage: 'Här var det tomt!',\n          filterRow: {\n            filterTooltip: 'Filter',\n          },\n        },\n      }}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            props.isOrders || props.isGroupOrders\n              ? updateOrder(newData, oldData)\n              : props.isVolunteers || props.isGroupVolunteers\n              ? updateVolunteer(newData, oldData)\n              : props.isGroups\n              ? updateGroup(newData, oldData)\n              : updateCancelled(newData, oldData);\n            props.refreshAction();\n            resolve();\n          }),\n      }}\n    />\n  );\n};\n\nexport default Table;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst AddButtonHeader = props => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div className=\"flex-spread\">\n      <h2>{props.headerText}</h2>\n      <Button className=\"add-button\" onClick={handleShow}>\n        + Lägg till ny {props.buttonText}\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton></Modal.Header>\n        <Modal.Body>{props.formForModal}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Stäng\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddButtonHeader;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nconst AddButtonHeader = props => {\n  return (\n    <div className=\"refresh-wrapper\">\n      <Button onClick={props.refreshAction}>\n        <FontAwesomeIcon icon={faSync} />\n      </Button>{' '}\n    </div>\n  );\n};\n\nexport default AddButtonHeader;\n","import React from 'react';\n\nfunction Chevron(props) {\n  return (\n    <svg\n      className={props.className}\n      height={props.height}\n      width={props.width}\n      viewBox=\"0 0 266 438\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"m258.476 235.971-194.344 194.343c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901l154.021-154.746-154.021-154.745c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0l194.343 194.343c9.373 9.372 9.373 24.568.001 33.941z\"\n        fill={props.fill}\n      />\n    </svg>\n  );\n}\n\nexport default Chevron;\n","import React, { useState, useRef } from 'react';\nimport Chevron from './Chevron';\n\nfunction Accordion(props) {\n  const [setActive, setActiveState] = useState('');\n  const [setHeight, setHeightState] = useState('0px');\n  const [setRotate, setRotateState] = useState('accordion-icon');\n\n  const content = useRef(null);\n\n  function toggleAccordion() {\n    setActiveState(setActive === '' ? 'active' : '');\n    setHeightState(\n      setActive === 'active' ? '0px' : `${content.current.scrollHeight}px`\n    );\n    setRotateState(\n      setActive === 'active' ? 'accordion-icon' : 'accordion-icon rotate'\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <button className={`accordion ${setActive}`} onClick={toggleAccordion}>\n        <p className=\"accordion-title\">{props.title}</p>\n        <Chevron className={`${setRotate}`} width={10} fill={'#fff'} />\n      </button>\n      <div\n        ref={content}\n        style={{ maxHeight: `${setHeight}` }}\n        className=\"accordion-content\"\n      >\n        <div\n          className=\"accordion-text\"\n          dangerouslySetInnerHTML={{ __html: props.content }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Accordion;\n","import React from 'react';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\n\nimport Table from '../tables/Table';\nimport AddButtonHeader from './../../components/AddButtonHeader';\nimport RefreshButton from './../../components/RefreshButton';\nimport VolunteerForm from './../users/VolunteerForm';\nimport Accordion from './../../components/Accordion';\n\nconst Volunteers = (props) => {\n  return (\n    <div className=\"page-layout\">\n      <AddButtonHeader\n        headerText=\"Volontärer\"\n        buttonText=\"volontär\"\n        formForModal={<VolunteerForm />}\n      />\n      <Accordion\n        title=\"Hur vi hanterar Volontärer\"\n        content=\"<h5>Uppdatera i vårt system</h5>\n        <ol>\n        <li>Öppna redigering genom att klicka på pennan till vänster om volontären</li>\n        <li>Välj grupp under 'Grupp'</li>\n        <li>Ändra status till 'Fördelad till grupp' under 'Status'.</li>\n        <li>Klicka på spara symbolen för att spara ändringar - om inte ändringarna syns direkt klicka refresh-knappen till höger</li>\n        </ol>\n        <br/>\n        <h5>Kommunicera med volontär</h5>\n        <ol>\n        <li>Under 'Bekräftelse till volontär' klicka 'Skicka bekräftelse' - detta öppnar din email med mailet och addressen redan klart.</li>\n        <li>Om det istället för ovan knapp står ett telefonnummer så låt det vara. Då är det upp till gruppledaren att kontakta volontären.</li>\n        <li>När skickat - klicka knappen 'Kontaktad'</li>\n      </ol>\n      <br/>\n\n        <h5>Kommunicera ny volontär till grupp</h5>\n        <ol>\n        <li>Under 'Detaljer till grupp' klicka 'Skicka detaljer' - detta öppnar din email med mailet redan klart.</li>\n        <li>Kolla detaljerna så allt ser bra ut och lägg till emailen för gruppledaren det ska skickas till</li>\n        <li>När skickat - klicka knappen 'Skickad'</li>\n      </ol>\n      <br/>\n      <p>Håll ett öga på volontären i systemet så gruppledaren så småningom markerar den som 'Aktiv', annars följ upp.</p>\n      </br>\"\n      />\n\n      <RefreshButton refreshAction={props.refreshAction} />\n\n      <Tabs defaultActiveKey=\"nya\" id=\"0\">\n        <Tab\n          eventKey=\"nya\"\n          title={\n            <span>\n              Nya {''}\n              {props.dbData.newVolunteers.length ? (\n                <Badge pill variant=\"danger\">\n                  {props.dbData.newVolunteers.length}\n                </Badge>\n              ) : (\n                0\n              )}\n            </span>\n          }\n        >\n          <Table\n            groupId={props.groupId}\n            isVolunteers={true}\n            tableData={props.dbData.newVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"fördelade\"\n          title={`Fördelade till grupper (${\n            props.dbData.distributedVolunteers.length\n              ? props.dbData.distributedVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isVolunteers={true}\n            tableData={props.dbData.distributedVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"välkomnade\"\n          title={`Välkomnade (${\n            props.dbData.welcomedVolunteers.length\n              ? props.dbData.welcomedVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isVolunteers={true}\n            tableData={props.dbData.welcomedVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"aktiva\"\n          title={`Aktiva(${\n            props.dbData.activeVolunteers.length\n              ? props.dbData.activeVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isVolunteers={true}\n            tableData={props.dbData.activeVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"pausade\"\n          title={`Pausade (${\n            props.dbData.pausedVolunteers.length\n              ? props.dbData.pausedVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isVolunteers={true}\n            tableData={props.dbData.pausedVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"olämpliga\"\n          title={`Olämpliga (${\n            props.dbData.notSuitableVolunteers.length\n              ? props.dbData.notSuitableVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isVolunteers={true}\n            tableData={props.dbData.notSuitableVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Volunteers;\n","import React from 'react';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\n\nimport Table from '../tables/Table';\nimport HelpForm from './../users/HelpForm';\n\n// import ContactForm from './../../components/ContactForm';\nimport AddButtonHeader from './../../components/AddButtonHeader';\nimport RefreshButton from './../../components/RefreshButton';\nimport Accordion from './../../components/Accordion';\n\nconst Orders = (props) => {\n  return (\n    <div className=\"page-layout\">\n      <AddButtonHeader\n        headerText=\"Beställningar\"\n        buttonText=\"beställning\"\n        formForModal={<HelpForm />}\n      />\n      {/* <AddButtonHeader\n        headerText=\"Email\"\n        buttonText=\"email\"\n        formForModal={\n          <ContactForm\n            email={'asaisacson@gmail.com'}\n            message=\"det funkar\"\n            name=\"Åsa\"\n          />\n        }\n      /> */}\n      <Accordion\n        title=\"Hur vi hanterar beställningar\"\n        content=\"\n        <h5>Uppdatera i vårt system</h5>\n        <ol>\n        <li>Öppna redigering genom att klicka på pennan till vänster om beställningen</li>\n        <li>Välj grupp under 'Grupp'</li>\n        <li>Ändra status till 'Fördelad till grupp' under 'Status'.</li>\n        <li>Klicka på spara symbolen för att spara ändringar - om inte ändringarna syns direkt klicka refresh-knappen till höger</li>\n        </ol>\n        <br/>\n        <h5>Kommunicera med beställare</h5>\n        <ol>\n        <li>Under 'Bekräftelse till beställare' klicka 'Skicka bekräftelse' - detta öppnar din email med mailet och addressen redan klart.</li>\n        <li>Om det istället för ovan knapp står ett telefonnummer så låt det vara. Då är det upp till gruppledaren att kontakta beställaren.</li>\n        <li>När skickat - klicka knappen 'Kontaktad'</li>\n      </ol>\n      <br/>\n\n        <h5>Kommunicera beställning till grupp</h5>\n        <ol>\n        <li>Under 'Detaljer till grupp' klicka 'Skicka detaljer' - detta öppnar din email med mailet redan klart.</li>\n        <li>Kolla detaljerna så allt ser bra ut och lägg till emailen för gruppledaren det ska skickas till</li>\n        <li>När skickat - klicka knappen 'Skickad'</li>\n      </ol>\n      <br/>\n      <p>Håll ett öga på beställningen i systemet så gruppledaren så småningom markerar den som 'Klar', annars följ upp.</p>\n      </br>\"\n      />\n\n      <RefreshButton refreshAction={props.refreshAction} />\n\n      <Tabs defaultActiveKey=\"nya\" id=\"0\">\n        <Tab\n          eventKey=\"nya\"\n          title={\n            <span>\n              Ej fördelade Beställningar{' '}\n              {props.dbData.newOrders.length ? (\n                <Badge pill variant=\"danger\">\n                  {props.dbData.newOrders.length}\n                </Badge>\n              ) : (\n                0\n              )}\n            </span>\n          }\n        >\n          <Table\n            isOrders={true}\n            tableData={props.dbData.newOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"gruppfördelade\"\n          title={`Fördelade till grupp (${\n            props.dbData.assignedToGroup.length\n              ? props.dbData.assignedToGroup.length\n              : 0\n          })`}\n        >\n          <Table\n            isOrders={true}\n            tableData={props.dbData.assignedToGroup}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"klara\"\n          title={`Klara (${\n            props.dbData.doneOrders.length ? props.dbData.doneOrders.length : 0\n          })`}\n        >\n          <Table\n            isOrders={true}\n            tableData={props.dbData.doneOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"pausad\"\n          title={`Pausade (${\n            props.dbData.pausedOrders.length\n              ? props.dbData.pausedOrders.length\n              : 0\n          })`}\n        >\n          <Table\n            isOrders={true}\n            tableData={props.dbData.pausedOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"avbokad\"\n          title={`Avbokade (${\n            props.dbData.cancelledOrders.length\n              ? props.dbData.cancelledOrders.length\n              : 0\n          })`}\n        >\n          <Table\n            isOrders={true}\n            tableData={props.dbData.cancelledOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Orders;\n","class Group {\n  constructor(\n    id,\n    datum,\n    gruppnamn,\n    länkNamn,\n    kontakt,\n    kommentarer,\n    telefon,\n    email,\n    reserv,\n    reservTelefon,\n    reservEmail,\n    address,\n    postkod,\n    status,\n    adminNamn,\n    adminPwd\n  ) {\n    this.id = id;\n    this.datum = datum;\n    this.gruppnamn = gruppnamn;\n    this.länkNamn = länkNamn;\n    this.kontakt = kontakt;\n    this.kommentarer = kommentarer;\n    this.telefon = telefon;\n    this.email = email;\n    this.reserv = reserv;\n    this.reservTelefon = reservTelefon;\n    this.reservEmail = reservEmail;\n    this.address = address;\n    this.postkod = postkod;\n    this.status = status;\n    this.adminNamn = adminNamn;\n    this.adminPwd = adminPwd;\n  }\n}\n\nexport default Group;\n","import React, { useState, useReducer } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport firebase from '../../firebase/firebase.utils';\n\nimport Mottaget from './Mottaget';\n\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value, // From textChangeHandler = (inputIdentifier, text)\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst Input = ({ label, placeholder, value, onChange }) => (\n  <>\n    <Form.Group controlId={label}>\n      <Form.Control\n        name={label}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder ? placeholder : label}\n      />\n    </Form.Group>\n  </>\n);\n\nconst GroupForm = (props) => {\n  const editedGroup = false;\n\n  //Set states\n  const [redirectToThanks, setRedirectToThanks] = useState(false);\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      gruppnamn: editedGroup ? editedGroup.gruppnamn : '',\n      kontakt: editedGroup ? editedGroup.kontakt : '',\n      kommentarer: editedGroup ? editedGroup.kommentarer : '',\n      telefon: editedGroup ? editedGroup.telefon : '',\n      email: editedGroup ? editedGroup.email : '',\n      address: editedGroup ? editedGroup.address : '',\n      postkod: editedGroup ? editedGroup.postkod : '',\n    },\n    inputValidities: {\n      gruppnamn: editedGroup ? true : false,\n      kontakt: editedGroup ? true : false,\n      kommentarer: editedGroup ? true : false,\n      telefon: editedGroup ? true : false,\n      email: editedGroup ? true : false,\n      address: editedGroup ? true : false,\n      postkod: editedGroup ? true : false,\n    },\n    formIsValid: editedGroup ? true : false,\n  });\n\n  const addGroup = (e) => {\n    e.preventDefault();\n    const db = firebase.firestore();\n    db.collection('groups').add({\n      datum: new Date().getTime(),\n      gruppnamn: formState.inputValues.gruppnamn,\n      länkNamn: formState.inputValues.länkNamn,\n      kontakt: formState.inputValues.kontakt,\n      kommentarer: formState.inputValues.kommentarer,\n      telefon: formState.inputValues.telefon,\n      email: formState.inputValues.email,\n      reserv: formState.inputValues.reserv,\n      reservTelefon: formState.inputValues.reservTelefon,\n      reservEmail: formState.inputValues.reservEmail,\n      address: formState.inputValues.address,\n      postkod: formState.inputValues.postkod,\n      status: 'aktiv',\n    });\n    setRedirectToThanks(true);\n  };\n\n  //Manages validation of title input\n  const textChangeHandler = (inputIdentifier, text) => {\n    let isValid = true;\n\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: text.target.value,\n      isValid: isValid,\n      input: inputIdentifier,\n    });\n  };\n\n  if (redirectToThanks === true) {\n    return <Mottaget />;\n  }\n\n  return (\n    <div className=\"form\">\n      <h2>Lägg till ny grupp</h2>\n      <p>Varje grupp ska vara lite och lätthanterlig, runt 4-10 personer</p>\n      <br />\n      <Form onSubmit={addGroup}>\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Gruppnamn\"\n              label=\"gruppnamn\"\n              value={formState.inputValues.gruppnamn}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'gruppnamn')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"Önskad länk (tex yttre-grupp-skarshamn)\"\n              label=\"länkNamn\"\n              value={formState.inputValues.länkNamn}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'länkNamn')}\n              required\n            />\n          </Col>\n        </Form.Row>\n\n        <h3>Kontaktpersonens uppgifter</h3>\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Gruppledare\"\n              label=\"kontakt\"\n              value={formState.inputValues.kontakt}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'kontakt')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"Telefon\"\n              label=\"telefon\"\n              value={formState.inputValues.telefon}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'telefon')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"E-post\"\n              label=\"email\"\n              value={formState.inputValues.email}\n              type=\"email\"\n              onChange={textChangeHandler.bind(this, 'email')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <h3>Reservgruppledares uppgifter</h3>\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Reserv gruppledare\"\n              label=\"reserv\"\n              value={formState.inputValues.reserv}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'reserv')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"Telefon\"\n              label=\"reservTelefon\"\n              value={formState.inputValues.reservTelefon}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'reservTelefon')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"E-post\"\n              label=\"reservEmail\"\n              value={formState.inputValues.reservEmail}\n              type=\"email\"\n              onChange={textChangeHandler.bind(this, 'reservEmail')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <h3>Gruppens uppgifter</h3>\n        <Form.Row>\n          <Col>\n            <Input\n              placeholder=\"Address\"\n              label=\"address\"\n              value={formState.inputValues.address}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'address')}\n              required\n            />\n          </Col>\n          <Col>\n            <Input\n              placeholder=\"Postkod\"\n              label=\"postkod\"\n              value={formState.inputValues.postkod}\n              type=\"text\"\n              onChange={textChangeHandler.bind(this, 'postkod')}\n              required\n            />\n          </Col>\n        </Form.Row>\n        <h3>Kommentarer</h3>\n        <Form.Group controlId=\"t-1\">\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            name=\"kommentarer\"\n            value={formState.inputValues.kommentarer}\n            type=\"text\"\n            onChange={textChangeHandler.bind(this, 'kommentarer')}\n            placeholder=\"Gruppens bakgrund, etc\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"secondary\" size=\"lg\" block>\n          Skicka\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default GroupForm;\n","import React, { useEffect, useState } from 'react';\nimport Group from './../../models/group';\nimport moment from 'moment';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport Table from '../tables/Table';\nimport AddButtonHeader from './../../components/AddButtonHeader';\nimport RefreshButton from './../../components/RefreshButton';\nimport GroupForm from '../users/GroupForm';\nimport Accordion from './../../components/Accordion';\n\nconst Groups = (props) => {\n  const firestore = firebase.firestore();\n  const [data, setData] = useState({\n    activeGroups: [],\n    inactiveGroups: [],\n  });\n\n  async function getGroups() {\n    const groups = [];\n    const querySnapshot = await firestore.collection('groups').get();\n    querySnapshot.forEach(function (doc) {\n      // doc.data() is never undefined for query doc snapshots\n      const resData = doc.data();\n      const readableDate = moment(new Date(resData.datum)).format('lll');\n\n      groups.push(\n        new Group(\n          doc.id,\n          readableDate,\n          resData.gruppnamn,\n          resData.länkNamn,\n          resData.kontakt,\n          resData.kommentarer,\n          resData.telefon,\n          resData.email,\n          resData.reserv,\n          resData.reservTelefon,\n          resData.reservEmail,\n          resData.address,\n          resData.postkod,\n          resData.status,\n          resData.adminNamn,\n          resData.adminPwd\n        )\n      );\n    });\n\n    setData({\n      activeGroups: groups.filter((data) => data.status === 'aktiv'),\n      inactiveGroups: groups.filter((data) => data.status === 'inaktiv'),\n    });\n  }\n  useEffect(() => {\n    getGroups();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"page-layout\">\n      <AddButtonHeader\n        headerText=\"Grupper\"\n        buttonText=\"grupp\"\n        headerLink={'/ny-grupp'}\n        formForModal={<GroupForm />}\n      />\n      <Accordion\n        title=\"Hur vi hanterar grupper\"\n        content=\"        <p>\n        Den här sidan är till för att få överblick över grupper knutna till\n        plattformen\n      </p>\n      <ol>\n        <li>Se anknytna volontärer och beställningar under varje grupp</li>\n        <li>Om du behöver kontakta gruppen, se 'kontaktperson' nedan.</li>\n      </ol>\"\n      />\n\n      <RefreshButton refreshAction={getGroups} />\n\n      <Tabs defaultActiveKey=\"aktiva\" id=\"0\">\n        <Tab\n          eventKey=\"aktiva\"\n          title={\n            <span>\n              Aktiva Grupper{' '}\n              {data.activeGroups.length ? (\n                <Badge pill variant=\"danger\">\n                  {data.activeGroups.length}\n                </Badge>\n              ) : (\n                0\n              )}\n            </span>\n          }\n        >\n          <Table\n            isGroups={true}\n            tableData={data.activeGroups}\n            refreshAction={getGroups}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"inaktiva\"\n          title={`Inaktiva grupper (${\n            data.inactiveGroups.length ? data.inactiveGroups.length : 0\n          })`}\n        >\n          <Table\n            isGroups={true}\n            tableData={data.inactiveGroups}\n            refreshAction={getGroups}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Groups;\n","class Cancellation {\n  constructor(id, datum, telefon, email, address, postkod, status) {\n    this.id = id;\n    this.datum = datum;\n    this.telefon = telefon;\n    this.email = email;\n    this.address = address;\n    this.postkod = postkod;\n    this.status = status;\n  }\n}\n\nexport default Cancellation;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport Cancellation from './../../models/cancellation';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport Table from '../tables/Table';\nimport AddButtonHeader from './../../components/AddButtonHeader';\nimport RefreshButton from './../../components/RefreshButton';\nimport CancelForm from './../users/CancelForm';\nimport Accordion from './../../components/Accordion';\n\nconst Cancellations = (props) => {\n  const firestore = firebase.firestore();\n  const [data, setData] = useState({\n    toCancel: [],\n    cancelled: [],\n  });\n\n  async function getCancellations() {\n    const cancellations = [];\n    const querySnapshot = await firestore.collection('cancellations').get();\n    querySnapshot.forEach(function (doc) {\n      // doc.data() is never undefined for query doc snapshots\n      const resData = doc.data();\n      const readableDate = moment(new Date(resData.datum)).format('lll');\n      cancellations.push(\n        new Cancellation(\n          doc.id,\n          readableDate,\n          resData.telefon,\n          resData.email,\n          resData.address,\n          resData.postkod,\n          resData.status\n        )\n      );\n    });\n\n    setData({\n      toCancel: cancellations.filter((data) => data.status === 'avboka'),\n      cancelled: cancellations.filter((data) => data.status === 'avbokad'),\n    });\n  }\n\n  useEffect(() => {\n    getCancellations();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"page-layout\">\n      <AddButtonHeader\n        headerText=\"Avbokningar\"\n        buttonText=\"avbokning\"\n        formForModal={<CancelForm />}\n      />\n      <Accordion\n        title=\"Hur vi hanterar avbokningar\"\n        content=\"<ol>\n        <li>Hitta den avbokade beställningen under 'beställningar'</li>\n        <li>\n          Kontakta relevant grupp för att meddela att beställningen ska bli\n          avbokad.\n        </li>\n        <li>\n          Påminn gruppledaren att kommunicera avbokningen till beställaren\n        </li>\n        <li>Radera beställningen via 'radera beställning' under beställningar/aktioner</li>\n        <li>\n          Kom sen tillbaka hit och markera avbokningen som 'avbokad' under\n          'status'.\n        </li>\n      </ol>\"\n      />\n\n      <RefreshButton refreshAction={getCancellations} />\n\n      <Tabs defaultActiveKey=\"avboka\" id=\"0\">\n        <Tab\n          eventKey=\"avboka\"\n          title={\n            <span>\n              Att avboka{' '}\n              {data.toCancel.length ? (\n                <Badge pill variant=\"danger\">\n                  {data.toCancel.length}\n                </Badge>\n              ) : (\n                0\n              )}\n            </span>\n          }\n        >\n          <Table\n            isCancelled={true}\n            tableData={data.toCancel}\n            refreshAction={getCancellations}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"avbokade\"\n          title={`Avbokade (${\n            data.cancelled.length ? data.cancelled.length : 0\n          })`}\n        >\n          <Table\n            isCancelled={true}\n            tableData={data.cancelled}\n            refreshAction={getCancellations}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Cancellations;\n","import React, { useEffect, useState } from 'react';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\nimport moment from 'moment';\n\nimport Order from './../../models/order';\nimport Volunteer from './../../models/volunteer';\n\nimport Volunteers from './Volunteers';\nimport Orders from './Orders';\nimport Groups from './Groups';\nimport Cancellations from './Cancellations';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst Admin = (props) => {\n  const firestore = firebase.firestore();\n\n  const [volunteersData, setVolunteersData] = useState({\n    newVolunteers: [],\n    distributedVolunteers: [],\n    welcomedVolunteers: [],\n    activeVolunteers: [],\n    pausedVolunteers: [],\n    notSuitableVolunteers: [],\n  });\n\n  const [ordersData, setOrdersData] = useState({\n    newOrders: [],\n    assignedToGroup: [],\n    doneOrders: [],\n    pausedOrders: [],\n    cancelledOrders: [],\n  });\n\n  //Get orders data\n  async function getOrders() {\n    const orders = [];\n    const querySnapshot = await firestore.collection('orders').get();\n    querySnapshot.forEach(function (doc) {\n      // doc.data() is never undefined for query doc snapshots\n      const resData = doc.data();\n      const readableDate = moment(new Date(resData.datum)).format('lll');\n\n      orders.push(\n        new Order(\n          doc.id,\n          resData.gruppId,\n          resData.volontärId,\n          readableDate,\n          resData.typ,\n          resData.beskrivning,\n          resData.swish,\n          resData.kontant,\n          resData.faktura,\n          resData.tidsrymd,\n          resData.telefon,\n          resData.förnamn,\n          resData.efternamn,\n          resData.email,\n          resData.address,\n          resData.postkod,\n          resData.status,\n          resData.kommentarer,\n          resData.skickadBeställare,\n          resData.skickadGrupp,\n          resData.skickadVolontär\n        )\n      );\n    });\n\n    setOrdersData({\n      newOrders: orders.filter((data) => data.status === '1'),\n      assignedToGroup: orders.filter((data) => data.status === '2'),\n      doneOrders: orders.filter((data) => data.status === '4'),\n      pausedOrders: orders.filter((data) => data.status === '5'),\n      cancelledOrders: orders.filter((data) => data.status === '6'),\n    });\n  }\n\n  //Get volunteers data\n  async function getVolunteers() {\n    const volunteers = [];\n    const querySnapshot = await firestore.collection('volunteers').get();\n    querySnapshot.forEach(function (doc) {\n      // doc.data() is never undefined for query doc snapshots\n      const resData = doc.data();\n      const readableDate = moment(new Date(resData.datum)).format('lll');\n\n      volunteers.push(\n        new Volunteer(\n          doc.id,\n          resData.gruppId,\n          resData.förnamn,\n          resData.efternamn,\n          resData.telefon,\n          resData.email,\n          resData.address,\n          resData.postkod,\n          resData.beskrivning,\n          resData.språk,\n          resData.födelseår,\n          resData.körkort,\n          resData.bil,\n          resData.mat,\n          resData.varor,\n          resData.ärenden,\n          resData.djur,\n          resData.prata,\n          resData.myndigheter,\n          resData.teknik,\n          readableDate,\n          resData.status,\n          resData.kommentarer,\n          resData.skickadVolontärTillGrupp,\n          resData.skickadBekräftelseTillVolontär\n        )\n      );\n    });\n\n    setVolunteersData({\n      newVolunteers: volunteers.filter((data) => data.status === '1'),\n      distributedVolunteers: volunteers.filter((data) => data.status === '2'),\n      welcomedVolunteers: volunteers.filter((data) => data.status === '3'),\n      activeVolunteers: volunteers.filter((data) => data.status === '4'),\n      pausedVolunteers: volunteers.filter((data) => data.status === '5'),\n      notSuitableVolunteers: volunteers.filter((data) => data.status === '6'),\n    });\n  }\n\n  useEffect(() => {\n    getOrders();\n    getVolunteers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"page-layout\">\n      <Tabs variant=\"pills\" defaultActiveKey=\"first\" id=\"0\">\n        <Tab\n          title={\n            <span>\n              Beställningar{' '}\n              {ordersData.newOrders.length ? (\n                <Badge pill variant=\"danger\">\n                  {ordersData.newOrders.length}\n                </Badge>\n              ) : (\n                '(0)'\n              )}\n            </span>\n          }\n          eventKey=\"first\"\n        >\n          <Orders refreshAction={getOrders} dbData={ordersData} />\n        </Tab>\n        <Tab\n          title={\n            <span>\n              Volontärer{' '}\n              {volunteersData.newVolunteers.length ? (\n                <Badge pill variant=\"danger\">\n                  {volunteersData.newVolunteers.length}\n                </Badge>\n              ) : (\n                '(0)'\n              )}\n            </span>\n          }\n          eventKey=\"second\"\n        >\n          <Volunteers refreshAction={getVolunteers} dbData={volunteersData} />\n        </Tab>\n        <Tab title=\"Grupper\" eventKey=\"third\">\n          <Groups />\n        </Tab>\n        <Tab title=\"Avbokningar\" eventKey=\"fourth\">\n          <Cancellations />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Admin;\n","import React from 'react';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\n\nimport Table from '../tables/Table';\nimport HelpForm from '../users/HelpForm';\nimport AddButtonHeader from '../../components/AddButtonHeader';\nimport RefreshButton from '../../components/RefreshButton';\n\nconst GroupOrders = (props) => {\n  return (\n    <div className=\"page-layout\">\n      <AddButtonHeader\n        headerText=\"Beställningar\"\n        buttonText=\"beställning\"\n        formForModal={<HelpForm />}\n      />\n      <br />\n      <h4>Hantera beställningar</h4>\n      <ol>\n        <li>\n          När ni får in en beställning, kolla först så 'Bekräftelse till\n          beställare' är 'Kontaktad'. Om inte, ring numret som står där och\n          klicka sen 'Kontaktad'.\n        </li>\n        <li>\n          Bestäm vem ska ta hand om beställningen och vidarebefodra dess\n          detaljer via knappen 'Skicka detaljer' under 'Detaljer till volontär'.\n        </li>\n        <li>\n          Skriv vilken volontär som tagit hand om beställningen under\n          'Kommentarer'\n        </li>\n        <li>\n          Slutligen, när beställningen är utförd - ändra fältet under 'Status'\n          till 'Klar'\n        </li>\n        <li>Klart! Ändringarna här syns nu också för samordnaren.</li>\n      </ol>\n      <br />\n\n      <h5>TIPS</h5>\n      <ul>\n        <li>\n          Öppna redigering genom att klicka på pennan till vänster om\n          beställningen\n        </li>\n        <li>\n          Klicka på bocken till vänster om beställningen för att spara - om inte\n          ändringarna syns direkt, klicka den lila refresh-knappen nere till\n          höger\n        </li>\n        <li>\n          Använd gärna 'Kommentarer' för att skriva in något ni vill förmedla\n          antingen internt eller till samordnaren.\n        </li>\n      </ul>\n      <br />\n\n      <p>\n        För frågor, kontakta asaisacson@gmail.com. Vi uppdaterar hela tiden\n        systemet och tar gärna emot tips om hur det kan bli bättre!\n      </p>\n      <br />\n      <h5>Mer information här</h5>\n      <a href=\"https://docs.google.com/document/d/1lLxe5x-4yJ1qPHfGkBkfle2EIp7tVjUU4aMhYuRQQ5Y/edit?usp=sharing\">\n        Gemensamma procedurer för beställningar och volontärer\n      </a>\n      <RefreshButton refreshAction={props.refreshAction} />\n\n      <Tabs defaultActiveKey=\"nya\" id=\"0\">\n        <Tab\n          eventKey=\"nya\"\n          title={\n            <span>\n              Att bli utförda{' '}\n              {props.dbData.distributedGroupOrders.length ? (\n                <Badge pill variant=\"danger\">\n                  {props.dbData.distributedGroupOrders.length}\n                </Badge>\n              ) : (\n                0\n              )}\n            </span>\n          }\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupOrders={true}\n            tableData={props.dbData.distributedGroupOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        {/* <Tab\n          eventKey=\"aktiva\"\n          title={`Fördelade (${\n            props.dbData.distributedVolunteerOrders.length\n              ? props.dbData.distributedVolunteerOrders.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupOrders={true}\n            tableData={props.dbData.distributedVolunteerOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab> */}\n        <Tab\n          eventKey=\"klara\"\n          title={`Klara (${\n            props.dbData.doneOrders.length ? props.dbData.doneOrders.length : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupOrders={true}\n            tableData={props.dbData.doneOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"pausad\"\n          title={`Pausade (${\n            props.dbData.pausedOrders.length\n              ? props.dbData.pausedOrders.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupOrders={true}\n            tableData={props.dbData.pausedOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"avbokade\"\n          title={`Avbokade (${\n            props.dbData.cancelledOrders.length\n              ? props.dbData.cancelledOrders.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupOrders={true}\n            tableData={props.dbData.cancelledOrders}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default GroupOrders;\n","import React from 'react';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\n\nimport Table from '../tables/Table';\nimport AddButtonHeader from '../../components/AddButtonHeader';\nimport RefreshButton from '../../components/RefreshButton';\nimport VolunteerForm from '../users/VolunteerForm';\n\nconst GroupVolunteers = (props) => {\n  return (\n    <div className=\"page-layout\">\n      <AddButtonHeader\n        headerText=\"Volontärer\"\n        buttonText=\"volontär\"\n        formForModal={<VolunteerForm />}\n      />\n      <br />\n      <h4>Hantera volontärer</h4>\n      <ol>\n        <li>\n          När ni får in en volontär, kolla först så 'Bekräftelse till volontär'\n          är 'Kontaktad'. Om inte, ring numret som står där och klicka sen\n          'Kontaktad'.\n        </li>\n        <li>\n          Ändra status till 'Välkomnad' när volontären står som 'Kontaktad'.\n        </li>\n        <li>\n          Bestäm vem ska ta hand om att träna volontären och - om det behövs -\n          vidarebefodra dess detaljer via knappen 'Kopiera detaljer'.\n        </li>\n        <li>När volontären blivit tränad, ändra status till 'Aktiv'.</li>\n        <li>Klart! Ändringarna här syns nu också för samordnaren.</li>\n      </ol>\n      <br />\n\n      <h5>TIPS</h5>\n      <ul>\n        <li>\n          Öppna redigering genom att klicka på pennan till vänster om volontären\n        </li>\n        <li>\n          Klicka på bocken till vänster om volontären för att spara - om inte\n          ändringarna syns direkt, klicka den lila refresh-knappen nere till\n          höger\n        </li>\n        <li>\n          Använd gärna 'Kommentarer' för att skriva in något ni vill förmedla\n          antingen internt eller till samordnaren.\n        </li>\n      </ul>\n      <br />\n\n      <p>\n        För frågor, kontakta asaisacson@gmail.com. Vi uppdaterar hela tiden\n        systemet och tar gärna emot tips om hur det kan bli bättre!\n      </p>\n      <br />\n      <h5>Mer information här</h5>\n      <a href=\"https://docs.google.com/document/d/1lLxe5x-4yJ1qPHfGkBkfle2EIp7tVjUU4aMhYuRQQ5Y/edit?usp=sharing\">\n        Gemensamma procedurer för beställningar och volontärer\n      </a>\n      <RefreshButton refreshAction={props.refreshAction} />\n\n      <Tabs defaultActiveKey=\"nya\" id=\"0\">\n        <Tab\n          eventKey=\"nya\"\n          title={\n            <span>\n              Nya Volontärer - att bli välkomnade{' '}\n              {props.dbData.newVolunteers.length ? (\n                <Badge pill variant=\"danger\">\n                  {props.dbData.newVolunteers.length}\n                </Badge>\n              ) : (\n                0\n              )}\n            </span>\n          }\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupVolunteers={true}\n            tableData={props.dbData.newVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"välkomnade\"\n          title={`Välkomnade - att tränas (${\n            props.dbData.welcomedVolunteers.length\n              ? props.dbData.welcomedVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupVolunteers={true}\n            tableData={props.dbData.welcomedVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"aktiva\"\n          title={`Aktiva(${\n            props.dbData.activeVolunteers.length\n              ? props.dbData.activeVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupVolunteers={true}\n            tableData={props.dbData.activeVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"pausade\"\n          title={`Pausade (${\n            props.dbData.pausedVolunteers.length\n              ? props.dbData.pausedVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupVolunteers={true}\n            tableData={props.dbData.pausedVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n        <Tab\n          eventKey=\"olämpliga\"\n          title={`Olämpliga (${\n            props.dbData.notSuitableVolunteers.length\n              ? props.dbData.notSuitableVolunteers.length\n              : 0\n          })`}\n        >\n          <Table\n            groupId={props.groupId}\n            isGroupVolunteers={true}\n            tableData={props.dbData.notSuitableVolunteers}\n            refreshAction={props.refreshAction}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default GroupVolunteers;\n","import React, { useEffect, useState } from 'react';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Badge from 'react-bootstrap/Badge';\nimport moment from 'moment';\n\nimport Order from './../../models/order';\nimport Group from './../../models/group';\nimport Volunteer from './../../models/volunteer';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport GroupOrders from '../groupAdmin/GroupOrders';\nimport GroupVolunteers from '../groupAdmin/GroupVolunteers';\n\nconst GroupAdmin = (props) => {\n  const firestore = firebase.firestore();\n\n  //Set up hooks\n  const [groupData, setGroupData] = useState({\n    currentGroup: [],\n  });\n\n  const [groupOrdersData, setGroupOrdersData] = useState({\n    distributedGroupOrders: [],\n    distributedVolunteerOrders: [],\n    doneOrders: [],\n    pausedOrders: [],\n    cancelledOrders: [],\n  });\n\n  const [groupVolunteersData, setGroupVolunteersData] = useState({\n    newVolunteers: [],\n    welcomedVolunteers: [],\n    activeVolunteers: [],\n    pausedVolunteers: [],\n    notSuitableVolunteers: [],\n  });\n\n  //Get group orders\n  async function getGroupOrders() {\n    const orders = [];\n    const querySnapshot = await firestore.collection('orders').get();\n    querySnapshot.forEach(function (doc) {\n      // doc.data() is never undefined for query doc snapshots\n      const resData = doc.data();\n      const readableDate = moment(new Date(resData.datum)).format('lll');\n\n      orders.push(\n        new Order(\n          doc.id,\n          resData.gruppId,\n          resData.volontärId,\n          readableDate,\n          resData.typ,\n          resData.beskrivning,\n          resData.swish,\n          resData.kontant,\n          resData.faktura,\n          resData.tidsrymd,\n          resData.telefon,\n          resData.förnamn,\n          resData.efternamn,\n          resData.email,\n          resData.address,\n          resData.postkod,\n          resData.status,\n          resData.kommentarer,\n          resData.skickadBeställare,\n          resData.skickadGrupp,\n          resData.skickadVolontär\n        )\n      );\n    });\n\n    //Only get the orders which match our current group id\n    const currentGroupOrders = orders.filter(\n      (data) => data.gruppId === props.groupId\n    );\n    setGroupOrdersData({\n      distributedGroupOrders: currentGroupOrders.filter(\n        (data) => data.status === '2'\n      ),\n      distributedVolunteerOrders: currentGroupOrders.filter(\n        (data) => data.status === '3'\n      ),\n      doneOrders: currentGroupOrders.filter((data) => data.status === '4'),\n      pausedOrders: currentGroupOrders.filter((data) => data.status === '5'),\n      cancelledOrders: currentGroupOrders.filter((data) => data.status === '6'),\n    });\n  }\n\n  //Get group volunteers\n  async function getGroupVolunteers() {\n    const volunteers = [];\n    const querySnapshot = await firestore.collection('volunteers').get();\n    querySnapshot.forEach(function (doc) {\n      // doc.data() is never undefined for query doc snapshots\n      const resData = doc.data();\n      const readableDate = moment(new Date(resData.datum)).format('lll');\n\n      volunteers.push(\n        new Volunteer(\n          doc.id,\n          resData.gruppId,\n          resData.förnamn,\n          resData.efternamn,\n          resData.telefon,\n          resData.email,\n          resData.address,\n          resData.postkod,\n          resData.beskrivning,\n          resData.språk,\n          resData.födelseår,\n          resData.körkort,\n          resData.bil,\n          resData.mat,\n          resData.varor,\n          resData.ärenden,\n          resData.djur,\n          resData.prata,\n          resData.myndigheter,\n          resData.teknik,\n          readableDate,\n          resData.status,\n          resData.kommentarer,\n          resData.skickadVolontärTillGrupp,\n          resData.skickadBekräftelseTillVolontär\n        )\n      );\n    });\n\n    //Only get the orders which match our current group id\n    const currentGroupVolunteers = volunteers.filter(\n      (data) => data.gruppId === props.groupId\n    );\n\n    setGroupVolunteersData({\n      newVolunteers: currentGroupVolunteers.filter(\n        (data) => data.status === '2'\n      ),\n      welcomedVolunteers: currentGroupVolunteers.filter(\n        (data) => data.status === '3'\n      ),\n      activeVolunteers: currentGroupVolunteers.filter(\n        (data) => data.status === '4'\n      ),\n      pausedVolunteers: currentGroupVolunteers.filter(\n        (data) => data.status === '5'\n      ),\n      notSuitableVolunteers: currentGroupVolunteers.filter(\n        (data) => data.status === '6'\n      ),\n    });\n  }\n\n  //Get group data\n  async function getGroups() {\n    const groups = [];\n    const querySnapshot = await firestore.collection('groups').get();\n    querySnapshot.forEach(function (doc) {\n      // doc.data() is never undefined for query doc snapshots\n      const resData = doc.data();\n      const readableDate = moment(new Date(resData.datum)).format('lll');\n\n      groups.push(\n        new Group(\n          doc.id,\n          readableDate,\n          resData.gruppnamn,\n          resData.länkNamn,\n          resData.kontakt,\n          resData.kommentarer,\n          resData.telefon,\n          resData.email,\n          resData.reserv,\n          resData.reservTelefon,\n          resData.reservEmail,\n          resData.address,\n          resData.postkod,\n          resData.status,\n          resData.adminNamn,\n          resData.adminPwd\n        )\n      );\n    });\n\n    //set current group data as the object which matches the passed group id\n    setGroupData({\n      currentGroup: groups.find((data) => data.id === props.groupId),\n    });\n  }\n\n  useEffect(() => {\n    getGroups();\n    getGroupOrders();\n    getGroupVolunteers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"page-layout\">\n      <h2>{groupData.currentGroup.gruppnamn}</h2>\n      <br />\n      <Tabs variant=\"pills\" defaultActiveKey=\"first\" id=\"0\">\n        <Tab\n          title={\n            <span>\n              Beställningar{' '}\n              {groupOrdersData.distributedGroupOrders.length ? (\n                <Badge pill variant=\"danger\">\n                  {groupOrdersData.distributedGroupOrders.length}\n                </Badge>\n              ) : (\n                '(0)'\n              )}\n            </span>\n          }\n          eventKey=\"first\"\n        >\n          <GroupOrders\n            groupId={props.groupId}\n            dbData={groupOrdersData}\n            refreshAction={getGroupOrders}\n          />\n        </Tab>\n        <Tab\n          title={\n            <span>\n              Volontärer{' '}\n              {groupVolunteersData.newVolunteers.length ? (\n                <Badge pill variant=\"danger\">\n                  {groupVolunteersData.newVolunteers.length}\n                </Badge>\n              ) : (\n                '(0)'\n              )}\n            </span>\n          }\n          eventKey=\"second\"\n        >\n          <GroupVolunteers\n            groupId={props.groupId}\n            dbData={groupVolunteersData}\n            refreshAction={getGroupVolunteers}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default GroupAdmin;\n","import React from 'react';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? 'shrink' : ''\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React from 'react';\n\nimport FormInput from '../components/FormInput';\nimport Button from 'react-bootstrap/Button';\n\nconst SignInForm = props => {\n  return (\n    <div className=\"sign-in page-layout\">\n      {props.topHeader ? <h6>{props.topHeader}</h6> : null}\n      <h2>{props.header}</h2>\n\n      <form onSubmit={props.handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"text\"\n          handleChange={props.handleChange}\n          value={props.loginName}\n          label=\"E-mail\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={props.loginPassword}\n          handleChange={props.handleChange}\n          label=\"Lösenord\"\n          required\n        />\n        <Button type=\"submit\" block>\n          Logga in\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignInForm;\n","class AdminGroup {\n  constructor(id, gruppnamn, adminNamn, adminPwd, länknamn) {\n    this.id = id;\n    this.gruppnamn = gruppnamn;\n    this.adminNamn = adminNamn;\n    this.adminPwd = adminPwd;\n  }\n}\n\nexport default AdminGroup;\n","import React, { useState, useEffect } from 'react';\n\nimport SignInForm from '../../components/SignInForm';\n\nimport AdminGroup from '../../models/adminGroup';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst GroupSignIn = (props) => {\n  const firestore = firebase.firestore();\n\n  //Set up hooks\n  const [loginName, setLoginName] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n\n  const [data, setData] = useState({\n    finalAdminData: [],\n  });\n\n  useEffect(() => {\n    async function getAdminData() {\n      const loadedAdminData = [];\n      //Not that we are getting the data from the collection 'groups' but\n      //passing it through the AdminGroup model instead of the Group model.\n      //This is because we don't need all the data of the full group.\n      const querySnapshot = await firestore.collection('groups').get();\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        const resData = doc.data();\n\n        loadedAdminData.push(\n          new AdminGroup(\n            doc.id,\n            resData.gruppnamn,\n            resData.adminNamn,\n            resData.adminPwd\n          )\n        );\n      });\n\n      //Only get the admin data which match our current group id\n      const currAdminGroupData = loadedAdminData.filter(\n        (data) => data.id === props.groupId\n      );\n      setData({\n        finalAdminData: currAdminGroupData[0],\n      });\n    }\n    getAdminData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const isVerified =\n      loginName === data.finalAdminData.adminNamn &&\n      loginPassword === data.finalAdminData.adminPwd;\n    isVerified\n      ? props.checkIfVerified('confirmed')\n      : props.checkIfVerified('wrong credentials');\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    if (name === 'adminNamn') {\n      setLoginName(value);\n    }\n    if (name === 'password') {\n      setLoginPassword(value);\n    }\n  };\n\n  return (\n    <SignInForm\n      topHeader={data.finalAdminData.gruppnamn}\n      header={'Gruppsida - admin'}\n      loginName={loginName}\n      loginPassword={loginPassword}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n    />\n  );\n};\n\nexport default GroupSignIn;\n","import React, { useState } from 'react';\n\nimport GroupAdmin from '../groupAdmin/GroupAdmin';\nimport GroupSignIn from '../groupAdmin/GroupSignIn';\n\nconst CheckGroupAdmin = ({ match }) => {\n  //Get id of group as passed via params in Table.js\n  const {\n    params: { groupId },\n  } = match;\n\n  //Set state\n  const [isVerified, setIsVerified] = useState('');\n\n  const checkIfVerified = (value) => {\n    setIsVerified(value);\n  };\n\n  if (isVerified === 'confirmed') {\n    return <GroupAdmin groupId={groupId} />;\n  }\n\n  if (isVerified === 'wrong credentials') {\n    return (\n      <div className=\"page-layout centered\">\n        <h3>Fel admindetaljer</h3>\n        <p>\n          Kontakta tjorn@allatillsammans.se om du glömt ditt användarnamn och\n          lösenord\n        </p>\n      </div>\n    );\n  }\n\n  return <GroupSignIn groupId={groupId} checkIfVerified={checkIfVerified} />;\n};\n\nexport default CheckGroupAdmin;\n","import React from 'react';\nimport Accordion from '../../components/Accordion';\n\nexport default function HowTo() {\n  return (\n    <div className=\"page-layout\">\n      <h2> Såhär funkar det </h2>\n      <br />\n      <div>\n        <Accordion\n          title=\"VILKA STÅR BAKOM TJÄNSTEN OCH VAD ÄR DESS SYFTE?\"\n          content=\" <ul>\n          <li>\n            Beställningstjänsten ALLA TILLSAMMANS\n            drivs av frivilliga krafter i civilsamhällets organisationer\n            på Tjörn i samarbete med Tjörns Kommun. Se alla medverkande organisationer under PARTNERS.\n          </li>\n          <li>\n            Syftet med tjänsten är att hjälpa dig som sitter i\n            karantän/självisolering med att få ärenden utanför hemmet\n            utförda av volontärer – för att du inte ska behöva lämna din\n            karantän.\n          </li>\n          <li>\n            Vårt gemensamma mål med detta är att minimera smittspridningen\n            under pandemin 2020 och att skydda utsatta och särskilt\n            sårbara grupper från smittan.\n          </li>\n        </ul>\"\n        />\n        <Accordion\n          title=\"VEM KAN ANVÄNDA TJÄNSTEN?\"\n          content=\"<ul>\n          <li>\n            Syftet med tjänsten är att hjälpa den som sitter i\n            karantän/självisolering med att få ärenden utanför hemmet\n            utförda av volontärer – för att du inte ska behöva lämna din\n            karantän.\n          </li>\n          <li>\n            Tjänsten är öppen att använda för alla som behöver den och bor\n            eller vistas på Tjörn under den period då myndigheter\n            rekommenderar social distansering för att begränsa\n            smittspridning.\n          </li>\n        </ul>\"\n        />\n        <Accordion\n          title=\"VAD KAN MAN FÅ HJÄLP MED?\"\n          content=\"\n          <ul>\n          <li>\n            Tjänsten kan användas för att beställa hjälp med de flesta\n            typer av ärenden. Det behöver alltså inte bara handla om att\n            köpa mat utan kan vara att hämta upp / lämna någonting, att\n            rasta djur osv.\n          </li>\n          <li>\n            Vi försöker efter bästa förmåga hantera och bistå alla\n            beställningar.\n          </li>\n          <li>\n            Eftersom längre social isolering och osäkerhet kan vara mycket\n            mentalt påfrestande har vi även i vårt beställningsformulär\n            alternativet ”prata” – vi har volontärer som kan ringa upp dig\n            som främst önskar någon att prata med.\n          </li>\n        </ul>\"\n        />\n        <Accordion\n          title=\"HUR HANTERAS DIN BESTÄLLNING?\"\n          content=\"\n          <ul>\n          <li>\n            Efter att du skickat in din beställning lagras den i vårt\n            system. Samordnaren tittar på var på Tjörn du bor och\n            vad du behöver hjälp med och fördelar därefter baserat på\n            informationen din beställning till en av de aktiva\n            volontärgrupperna på Tjörn.\n          </li>\n          <li>\n            Ju mer information du förser din beställning med desto lättare blir den för oss att hantera.\n          </li>\n          <li>\n            Om vi inte har möjlighet att hjälpa dig kommer vi så snart som\n            möjligt att kontakta dig på telefon och meddela detta.\n          </li>\n          <li>\n            Om din beställning behöver kompletteras med information för\n            att kunna fullföljas blir du kontaktad på telefon angående\n            detta av en volontär.\n          </li>\n          <li>\n            Om du vill avboka en lagd beställning ber vi dig att göra det <a href='https://tjorn.allatillsammans.se/avboka'>här</a>\n          </li>\n        </ul>\"\n        />\n        <Accordion\n          title=\"VAD KOSTAR DET? HUR FUNGERAR BETALNINGAR?\"\n          content=\"\n          <ul>\n          <li>Att använda tjänsten är gratis.</li>\n          <li>\n            Är det ett inköp som du behöver hjälp med så ersätter du\n            kostnaden för inköpet i efterskott. Volontären lägger ut\n            pengar vid inköpet och skickar dig direkt ett sms med ett foto\n            av kvittot. Du betalar med betaltjänsten Swish (på mobil)\n            eller med kontanter i samband med att du får leveransen.\n          </li>\n          <li>\n            Bensinkostnaderna för transporter kopplade till\n            beställningarna fördelas mellan de medverkande\n            civilsamhällesorganisationerna.\n          </li>\n        </ul>\"\n        />\n        <Accordion\n          title=\"KAN JAG LITA PÅ VOLONTÄRERNA?\"\n          content=\"\n          <ul>\n          <li>\n            Alla beställningar passerar samordnaren som fördelar\n            dem till lämplig grupp baserat på beställningens innehåll och\n            adress. Varje grupp har en gruppledare som i sin tur fördelar\n            beställningen till en av gruppens 6-8 volontärer. Gruppledaren\n            står i ständig kontakt med gruppens volontärer och rapporterar\n            till samordnaren när en beställning är färdighanterad.\n          </li>\n          <li>\n            En beställning får inte flaggas som KLAR i vårt system om inte\n            gruppledaren har bekräftat att den är färdig. Det innebär att\n            det alltid är tre personer – och varken fler eller färre – som\n            vet om att du har gjort en beställning.\n          </li>\n          <li>\n            Kom ihåg att volontärerna är vanliga människor, andra Tjörnbor\n            och alla gör så gott de kan!\n          </li>\n        </ul>\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Intro() {\n  return (\n    <div className=\"page-layout\">\n      <h2> Vad kan man få hjälp med?</h2>\n      <ul>\n        <li>\n          Tjänsten kan användas för att beställa hjälp med de flesta typer av\n          ärenden. Det behöver alltså inte bara handla om att handla mat utan\n          kan vara att hämta upp / lämna någonting, att handla djurmat osv.\n        </li>\n        <li>\n          Vi försöker efter bästa förmåga hantera och bistå alla beställningar.\n        </li>\n        <li>\n          Eftersom längre social isolering och osäkerhet kan vara mycket mentalt\n          påfrestande har vi även i vårt beställningsformulär alternativet\n          ”prata” – vi har volontärer som kan ringa upp dig som främst önskar\n          någon att prata med.\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport Accordion from '../../components/Accordion';\nimport allaTillsammansPic from './../../images/allatillsammans.PNG';\n\nexport default function Contact() {\n  return (\n    <div className=\"page-layout\">\n      <h2>Kontakt</h2>\n      <br />\n      <Accordion\n        title=\"SAMORDNARE\"\n        content=\" <p>\n          Samordnaren på Tjörn är Anna Berglund (Egnahemsfabriken). Henne når du på tjorn@allatillsammans.se\n        </p>\n        <p>\n          Om du istället föredrar att ringa in din beställning kan du\n          kontakta Helena Johannesson (Svenska\n          kyrkan Tjörn) på 0733 230 571.\n        </p>\"\n      />\n      <Accordion\n        title=\"GRUPPLEDARE OCH VOLONTÄRSGRUPPER\"\n        content=\" <p>\n          Volontärsinsatserna bedrivs i volontärsgrupper. Varje\n          volontärsgrupp har 4-6 medlemmar och en gruppledare. Kontakta\n          gruppledaren om du har frågor om din beställning (du får ett sms eller\n          epostmeddelande med kontaktdetaljer till din grupp när beställningen har fördelats).\n        </p>\"\n      />\n      <Accordion\n        title=\"VOLONTÄRER\"\n        content=\" <p>\n          Enskilda volontärer nås genom gruppledare i respektive grupp\n          eller genom att maila till tjorn@allatillsammans.se.\n        </p>\"\n      />\n      <Accordion\n        title=\"AVBOKA BESTÄLLNING\"\n        content=\" <p>\n          Vill du dra tillbaka en beställning? Skicka ett mail till tjorn@allatillsammans.se eller\n          använd avbokningsformuläret <a href='https://tjorn.allatillsammans.se/avboka'>här</div></a>.\n        </p>\"\n      />\n      <Accordion\n        title=\"FEEDBACK OCH FÖRSLAG\"\n        content=\"  <p>\n        Vi uppgraderar kontinuerligt siten för att möta behov, och tar gärna emot förslag om utökning och förbättringar!\n        </p>\n        <p>Webbansvarig: Åsa Isacson\n        </p>\n        <p>asaisacson@gmail.com\n        </p>\"\n      />\n      <img\n        alt=\"\"\n        src={allaTillsammansPic}\n        width=\"100%\"\n        className=\"full-width-pic\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({\n  component: Component,\n  isAuthenticated,\n  isVerifying,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isVerifying ? (\n        <div />\n      ) : isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/admin',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\nexport default ProtectedRoute;\n","\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { loginUser } from \"../store/actions\";\n\nimport SignInForm from './SignInForm';\n\nfunction Login(props) {\n\n  let location = useLocation();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const { value, name } = event.target;\n    if (name === 'email') {\n      setEmail(value);\n    }\n    if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { dispatch } = props;\n\n    dispatch(loginUser(email, password));\n  };\n\n  const { isAuthenticated } = props;\n\n  if (isAuthenticated) {\n    // if successfully logged in, send user back to the route they want to access\n    let { from } = location.state || { from: { pathname: \"/\" }};\n    return <Redirect to={from} />\n  } else {\n    return (\n      // render sign in form if not logged in\n      <SignInForm\n        header={'Logga in som admin'}\n        loginName={email}\n        loginPassword={password}\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n      />\n    );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggingIn: state.auth.isLoggingIn,\n    loginError: state.auth.loginError,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\n//Components\nimport MainHeader from './components/MainHeader';\n\n//All screens\nimport Home from './screens/Home';\n\n//User screens\nimport Apply from './screens/users/Apply';\nimport Partners from './screens/info/Partners';\nimport Cancel from './screens/users/Cancel';\nimport Volunteer from './screens/users/Volunteer';\n\n//Admin screens\nimport Admin from './screens/admin/Admin';\nimport Orders from './screens/admin/Orders';\nimport Volunteers from './screens/admin/Volunteers';\nimport Groups from './screens/admin/Groups';\nimport Cancellations from './screens/admin/Cancellations';\nimport Mottaget from './screens/users/Mottaget';\n\n//Group Admin screens\nimport GroupAdmin from './screens/groupAdmin/CheckGroupAdmin';\n\n//Info screens\nimport HowTo from './screens/info/HowTo';\nimport Intro from './screens/info/Intro';\nimport Contact from './screens/info/Contact';\n\n//Authentication\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Login from './components/Login';\n\nimport './App.scss';\n\nrequire('dotenv').config();\n\nfunction App(props) {\n  const { isAuthenticated, isVerifying } = props;\n\n  return (\n    <div>\n      <MainHeader />\n      <div className=\"container\">\n        <Switch>\n          {/* For users */}\n          <Route path=\"/bestallning\">\n            <Apply />\n          </Route>\n          <Route path=\"/avboka\">\n            <Cancel />\n          </Route>\n          <Route path=\"/bli-volontar\">\n            <Volunteer />\n          </Route>\n          <Route path=\"/byt-sprak\"></Route>\n          <Route path=\"/sahar-funkar-det\">\n            <HowTo />\n          </Route>\n          <Route path=\"/intro\">\n            <Intro />\n          </Route>\n          <Route path=\"/kontakt\">\n            <Contact />\n          </Route>\n          <Route path=\"/partners\">\n            <Partners />\n          </Route>\n          {/* For admin */}\n          <ProtectedRoute\n            exact\n            path=\"/admin\"\n            component={Admin}\n            isAuthenticated={isAuthenticated}\n            isVerifying={isVerifying}\n          />\n          {/* For groupadmin */}\n          <ProtectedRoute\n            path=\"/grupp/:groupLink/:groupId\"\n            exact\n            component={GroupAdmin}\n            isAuthenticated={isAuthenticated}\n            isVerifying={isVerifying}\n          />\n          {/* NOTE TO VISHNU: \n             These should be sub routes of admin */}\n          <Route path=\"/mottaget\">\n            <Mottaget />\n          </Route>\n          <Route path=\"/beställningar\">\n            <Orders />\n          </Route>\n          <Route path=\"/volontärer\">\n            <Volunteers />\n          </Route>\n          <Route path=\"/grupper\">\n            <Groups />\n          </Route>\n          <Route path=\"/avbokningar\">\n            <Cancellations />\n          </Route>\n          <Route exact path=\"/login\" component={Login} />\n\n          {/* For all */}\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    isVerifying: state.auth.isVerifying,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import {\n  DELETE_ORDER,\n  CREATE_ORDER,\n  UPDATE_ORDER,\n  SET_ORDERS,\n} from './../actions/orders';\nimport Order from '../../models/order';\n\nconst initialState = {\n  availableOrders: [],\n};\n\nexport default (state = initialState, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ORDERS:\n      console.log(\n        'store/reducers/orders.js:18 getting the firebase data via our reducer:',\n        action.orders\n      );\n      return {\n        availableOrders: action.orders,\n      };\n    case CREATE_ORDER:\n      const newOrder = new Order(\n        action.orderData.id,\n        action.orderData.gruppId,\n        action.orderData.volontärId,\n        action.orderData.datum,\n        action.orderData.typ,\n        action.orderData.beskrivning,\n        action.orderData.swish,\n        action.orderData.kontant,\n        action.orderData.faktura,\n        action.orderData.tidsrymd,\n        action.orderData.telefon,\n        action.orderData.förnamn,\n        action.orderData.efternamn,\n        action.orderData.email,\n        action.orderData.address,\n        action.orderData.postkod,\n        action.orderData.status,\n        action.orderData.kommentarer,\n        action.orderData.skickadBeställare,\n        action.orderData.skickadGrupp,\n        action.orderData.skickadVolontär\n      );\n\n      return {\n        ...state,\n        availableOrders: state.availableOrders.concat(newOrder),\n      };\n    case UPDATE_ORDER:\n      const orderIndex = state.userOrders.findIndex(\n        (ordr) => ordr.id === action.oid\n      );\n      const updatedOrder = new Order(\n        action.oid,\n        action.orderData.gruppId,\n        action.orderData.volontärId,\n        state.availableOrders[orderIndex].datum,\n        action.orderData.typ,\n        action.orderData.beskrivning,\n        action.orderData.swish,\n        action.orderData.kontant,\n        action.orderData.faktura,\n        action.orderData.tidsrymd,\n        action.orderData.telefon,\n        action.orderData.förnamn,\n        action.orderData.efternamn,\n        action.orderData.email,\n        action.orderData.address,\n        action.orderData.postkod,\n        action.orderData.status,\n        action.orderData.kommentarer,\n        action.orderData.skickadBeställare,\n        action.orderData.skickadGrupp,\n        action.orderData.skickadVolontär\n      );\n      const updatedAvailableOrders = [...state.availableOrders];\n      updatedAvailableOrders[orderIndex] = updatedOrder;\n\n      return {\n        ...state,\n        availableOrders: updatedAvailableOrders,\n      };\n    case DELETE_ORDER:\n      return {\n        ...state,\n        availableOrders: state.availableOrders.filter(\n          (order) => order.id !== action.oid\n        ),\n      };\n  }\n  return state;\n};\n","import {\n  DELETE_GROUP,\n  CREATE_GROUP,\n  UPDATE_GROUP,\n  SET_GROUPS,\n} from '../actions/groups';\nimport Group from '../../models/group';\n\nconst initialState = {\n  availableGroups: [],\n};\n\nexport default (state = initialState, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_GROUPS:\n      return {\n        availableGroups: action.groups,\n      };\n    case CREATE_GROUP:\n      const newGroup = new Group(\n        action.groupData.id,\n        action.groupData.datum,\n        action.groupData.gruppnamn,\n        action.groupData.länkNamn,\n        action.groupData.kontakt,\n        action.groupData.kommentarer,\n        action.groupData.telefon,\n        action.groupData.email,\n        action.groupData.reserv,\n        action.groupData.reservTelefon,\n        action.groupData.reservEmail,\n        action.groupData.address,\n        action.groupData.postkod,\n        action.groupData.status,\n        action.groupData.adminNamn,\n        action.groupData.adminPwd\n      );\n      return {\n        ...state,\n        availableGroups: state.availableGroups.concat(newGroup),\n      };\n    case UPDATE_GROUP:\n      const groupIndex = state.userGroups.findIndex(\n        (ordr) => ordr.id === action.oid\n      );\n      const updatedGroup = new Group(\n        action.oid,\n        state.availableGroups[groupIndex].datum,\n        action.groupData.gruppnamn,\n        action.groupData.länkNamn,\n        action.groupData.kontakt,\n        action.groupData.kommentarer,\n        action.groupData.telefon,\n        action.groupData.email,\n        action.groupData.reserv,\n        action.groupData.reservTelefon,\n        action.groupData.reservEmail,\n        action.groupData.address,\n        action.groupData.postkod,\n        action.groupData.status,\n        action.groupData.adminNamn,\n        action.groupData.adminPwd\n      );\n      const updatedAvailableGroups = [...state.availableGroups];\n      updatedAvailableGroups[groupIndex] = updatedGroup;\n\n      return {\n        ...state,\n        availableGroups: updatedAvailableGroups,\n      };\n    case DELETE_GROUP:\n      return {\n        ...state,\n        availableGroups: state.availableGroups.filter(\n          (group) => group.id !== action.oid\n        ),\n      };\n  }\n  return state;\n};\n","import {\n  DELETE_VOLUNTEER,\n  CREATE_VOLUNTEER,\n  UPDATE_VOLUNTEER,\n  SET_VOLUNTEERS,\n} from '../actions/volunteers';\nimport Volunteer from '../../models/volunteer';\n\nconst initialState = {\n  availableVolunteers: [],\n};\n\nexport default (state = initialState, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_VOLUNTEERS:\n      console.log('---------store/reducers/volunteers.js---------');\n      console.log(\n        'action.volunteers from SET_VOLUNTEERS reducer THIS WORKS: ',\n        action.volunteers\n      );\n      return {\n        availableVolunteers: action.volunteers,\n      };\n    case CREATE_VOLUNTEER:\n      const newVolunteer = new Volunteer(\n        action.volunteerData.id,\n        action.volunteerData.förnamn,\n        action.volunteerData.efternamn,\n        action.volunteerData.telefon,\n        action.volunteerData.email,\n        action.volunteerData.address,\n        action.volunteerData.postkod,\n        action.volunteerData.beskrivning,\n        action.volunteerData.körkort,\n        action.volunteerData.bil,\n        action.volunteerData.mat,\n        action.volunteerData.varor,\n        action.volunteerData.ärenden,\n        action.volunteerData.djur,\n        action.volunteerData.prata,\n        action.volunteerData.myndigheter,\n        action.volunteerData.teknik,\n        action.volunteerData.grupp,\n        action.volunteerData.datum,\n        action.volunteerData.status,\n        action.volunteerData.kommentarer,\n        action.volunteerData.skickadVolontärTillGrupp,\n        action.volunteerData.skickadBekräftelseTillVolontär\n      );\n      return {\n        ...state,\n        availableVolunteers: state.availableVolunteers.concat(newVolunteer),\n      };\n    case UPDATE_VOLUNTEER:\n      const volunteerIndex = state.userVolunteers.findIndex(\n        (ordr) => ordr.id === action.oid\n      );\n      const updatedVolunteer = new Volunteer(\n        action.oid,\n        action.volunteerData.förnamn,\n        action.volunteerData.efternamn,\n        action.volunteerData.telefon,\n        action.volunteerData.email,\n        action.volunteerData.address,\n        action.volunteerData.postkod,\n        action.volunteerData.beskrivning,\n        action.volunteerData.körkort,\n        action.volunteerData.bil,\n        action.volunteerData.mat,\n        action.volunteerData.varor,\n        action.volunteerData.ärenden,\n        action.volunteerData.djur,\n        action.volunteerData.prata,\n        action.volunteerData.myndigheter,\n        action.volunteerData.teknik,\n        action.volunteerData.grupp,\n        state.availableVolunteers[volunteerIndex].datum,\n        action.volunteerData.status,\n        action.volunteerData.kommentarer,\n        action.volunteerData.skickadVolontärTillGrupp,\n        action.volunteerData.skickadBekräftelseTillVolontär\n      );\n      const updatedAvailableVolunteers = [...state.availableVolunteers];\n      updatedAvailableVolunteers[volunteerIndex] = updatedVolunteer;\n\n      return {\n        ...state,\n        availableVolunteers: updatedAvailableVolunteers,\n      };\n    case DELETE_VOLUNTEER:\n      return {\n        ...state,\n        availableVolunteers: state.availableVolunteers.filter(\n          (volunteer) => volunteer.id !== action.oid\n        ),\n      };\n  }\n  return state;\n};\n","import {\n  DELETE_CANCELLATION,\n  CREATE_CANCELLATION,\n  UPDATE_CANCELLATION,\n  SET_CANCELLATIONS\n} from '../actions/cancellations';\nimport Cancellation from '../../models/cancellation';\n\nconst initialState = {\n  availableCancellations: []\n};\n\nexport default (state = initialState, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CANCELLATIONS:\n      return {\n        availableCancellations: action.cancellations\n      };\n    case CREATE_CANCELLATION:\n      const newCancellation = new Cancellation(\n        action.cancellationData.id,\n        action.cancellationData.datum,\n        action.cancellationData.telefon,\n        action.cancellationData.email,\n        action.cancellationData.address,\n        action.cancellationData.postkod,\n        action.cancellationData.status\n      );\n      return {\n        ...state,\n        availableCancellations: state.availableCancellations.concat(\n          newCancellation\n        )\n      };\n    case UPDATE_CANCELLATION:\n      const cancellationIndex = state.userCancellations.findIndex(\n        ordr => ordr.id === action.oid\n      );\n      const updatedCancellation = new Cancellation(\n        action.oid,\n        state.availableCancellations[cancellationIndex].datum,\n        action.cancellationData.telefon,\n        action.cancellationData.email,\n        action.cancellationData.address,\n        action.cancellationData.postkod,\n        action.cancellationData.status\n      );\n      const updatedAvailableCancellations = [...state.availableCancellations];\n      updatedAvailableCancellations[cancellationIndex] = updatedCancellation;\n\n      return {\n        ...state,\n        availableCancellations: updatedAvailableCancellations\n      };\n    case DELETE_CANCELLATION:\n      return {\n        ...state,\n        availableCancellations: state.availableCancellations.filter(\n          cancellation => cancellation.id !== action.oid\n        )\n      };\n  }\n  return state;\n};\n","import { combineReducers } from \"redux\";\n\n//Reducers TBD: Currently not in use.\nimport ordersReducer from './orders';\nimport groupsReducer from './groups';\nimport volunteersReducer from './volunteers';\nimport cancellationsReducer from './cancellations';\nimport authReducer from './auth';\n\n//Combines all the reducers which manages our redux state. This is where we geet our current state from in the child screens.\nexport default combineReducers({\n    orders: ordersReducer,\n    volunteers: volunteersReducer,\n    groups: groupsReducer,\n    cancellations: cancellationsReducer,\n    auth: authReducer\n  });","import Order from './../../models/order';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport moment from 'moment';\n\nexport const DELETE_ORDER = 'DELETE_ORDER';\nexport const CREATE_ORDER = 'CREATE_ORDER';\nexport const UPDATE_ORDER = 'UPDATE_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\n\nexport const fetchOrders = () => {\n  return async (dispatch) => {\n    //Getting data from firestore\n    const firestore = firebase.firestore();\n\n    try {\n      const loadedOrders = [];\n\n      firestore\n        .collection('orders')\n        .get()\n        .then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            // doc.data() is never undefined for query doc snapshots\n            const resData = doc.data();\n            const readableDate = moment(new Date(resData.datum)).format('lll');\n            loadedOrders.push(\n              new Order(\n                doc.id,\n                resData.gruppId,\n                resData.volontärId,\n                readableDate,\n                resData.typ,\n                resData.beskrivning,\n                resData.swish,\n                resData.kontant,\n                resData.faktura,\n                resData.tidsrymd,\n                resData.telefon,\n                resData.förnamn,\n                resData.efternamn,\n                resData.email,\n                resData.address,\n                resData.postkod,\n                resData.status,\n                resData.kommentarer,\n                resData.skickadBeställare,\n                resData.skickadGrupp,\n                resData.skickadVolontär\n              )\n            );\n          });\n        });\n\n      console.log(\n        'store/actions/orders.js:47 getting data from firebase and passing it through model - THIS WORKS: ',\n        loadedOrders\n      );\n\n      dispatch({\n        type: SET_ORDERS,\n        orders: loadedOrders,\n      });\n    } catch (err) {\n      // send to custom analytics server\n      throw err;\n    }\n  };\n};\n\n// console.log('doc.id: ', doc.id);\n// console.log('readableDate: ', readableDate);\n// console.log('resData.typ: ', resData.typ);\n// console.log('resData.beskrivning: ', resData.beskrivning);\n// console.log('resData.tidsrymd: ', resData.tidsrymd);\n// console.log('resData.telefon: ', resData.telefon);\n// console.log('resData.förnamn: ', resData.förnamn);\n// console.log('resData.efternamn: ', resData.efternamn);\n// console.log('resData.email: ', resData.email);\n// console.log('resData.address: ', resData.address);\n// console.log('resData.grupp: ', resData.grupp);\n// console.log('resData.status: ', resData.status);\n\nexport const deleteOrder = (orderId) => {\n  return async (dispatch, getState) => {\n    // const token = getState().auth.token; //TODO: set up authorisation of admin\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/orders/${orderId}.json`,\n      // `https://sverige-tillsammans.firebaseio.com/orders/${orderId}.json?auth=${token}`,\n      {\n        method: 'DELETE',\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n    dispatch({ type: DELETE_ORDER, oid: orderId });\n  };\n};\n\nexport const createOrder = (\n  typ,\n  beskrivning,\n  tidsrymd,\n  telefon,\n  förnamn,\n  efternamn,\n  email,\n  address,\n  postkod\n) => {\n  return async (dispatch, getState) => {\n    console.log('------createOrder was triggered-------');\n    console.log('received data:');\n    console.log('typ:', typ);\n    console.log('beskrivning:', beskrivning);\n    console.log('tidsrymd:', tidsrymd);\n    console.log('telefon:', telefon);\n    console.log('förnamn:', förnamn);\n    console.log('efternamn:', efternamn);\n    console.log('email:', email);\n    console.log('address:', address);\n    console.log('postkod:', postkod);\n    console.log('---------');\n\n    const setDatum = new Date().getTime();\n    const setGrupp = '';\n    const setStatus = '1';\n\n    const db = firebase.firestore();\n    const response = await db.collection('orders').add({\n      typ: typ,\n      beskrivning: beskrivning,\n      tidsrymd: tidsrymd,\n      telefon: telefon,\n      förnamn: förnamn,\n      efternamn: efternamn,\n      email: email,\n      address: address,\n      grupp: setGrupp,\n      datum: setDatum,\n      status: setStatus,\n    });\n\n    // const response = await fetch(\n    //   `https://sverige-tillsammans.firebaseio.com/orders.json`,\n    //   // `https://sverige-tillsammans.firebaseio.com/orders.json?auth=${token}`,\n    //   {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //       datum: setDatum,\n    //       typ,\n    //       beskrivning,\n    //       tidsrymd,\n    //       telefon,\n    //       förnamn,\n    //       efternamn,\n    //       email,\n    //       address,\n    //       postkod,\n    //       grupp: setGrupp,\n    //       status: setStatus\n    //     })\n    //   }\n    // );\n\n    const resData = await response.json();\n    console.log('resData efter post/fetch firebase:', resData);\n    console.log('-------------------END-----------');\n\n    dispatch({\n      type: CREATE_ORDER,\n      orderData: {\n        id: resData.name,\n        datum: setDatum,\n        typ,\n        beskrivning,\n        tidsrymd,\n        telefon,\n        förnamn,\n        efternamn,\n        email,\n        address,\n        postkod,\n        grupp: setGrupp,\n        status: setStatus,\n      },\n    });\n  };\n};\n\nexport const updateOrder = (\n  id,\n  gruppId,\n  volontärId,\n  datum,\n  typ,\n  beskrivning,\n  swish,\n  kontant,\n  faktura,\n  tidsrymd,\n  telefon,\n  förnamn,\n  efternamn,\n  email,\n  address,\n  postkod,\n  status,\n  kommentarer,\n  skickadBeställare,\n  skickadGrupp,\n  skickadVolontär\n) => {\n  return async (dispatch) => {\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/orders/${id}.json`,\n      {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          gruppId,\n          volontärId,\n          datum,\n          typ,\n          beskrivning,\n          swish,\n          kontant,\n          faktura,\n          tidsrymd,\n          telefon,\n          förnamn,\n          efternamn,\n          email,\n          address,\n          postkod,\n          status,\n          kommentarer,\n          skickadBeställare,\n          skickadGrupp,\n          skickadVolontär,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    dispatch({\n      type: UPDATE_ORDER,\n      oid: id,\n      orderData: {\n        gruppId,\n        volontärId,\n        datum,\n        typ,\n        beskrivning,\n        swish,\n        kontant,\n        faktura,\n        tidsrymd,\n        telefon,\n        förnamn,\n        efternamn,\n        email,\n        address,\n        postkod,\n        status,\n        kommentarer,\n        skickadBeställare,\n        skickadGrupp,\n        skickadVolontär,\n      },\n    });\n  };\n};\n","import Volunteer from '../../models/volunteer';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n// import moment from 'moment';\n\nexport const DELETE_VOLUNTEER = 'DELETE_VOLUNTEER';\nexport const CREATE_VOLUNTEER = 'CREATE_VOLUNTEER';\nexport const UPDATE_VOLUNTEER = 'UPDATE_VOLUNTEER';\nexport const SET_VOLUNTEERS = 'SET_VOLUNTEERS';\n\nexport const fetchVolunteers = () => {\n  return async (dispatch) => {\n    //Getting data from firestore\n    const firestore = firebase.firestore();\n\n    try {\n      const loadedVolunteers = [];\n\n      firestore\n        .collection('volunteers')\n        .get()\n        .then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            // doc.data() is never undefined for query doc snapshots\n            const resData = doc.data();\n            loadedVolunteers.push(\n              new Volunteer(\n                doc.id,\n                resData.förnamn,\n                resData.efternamn,\n                resData.telefon,\n                resData.email,\n                resData.address,\n                resData.postkod,\n                resData.beskrivning,\n                resData.språk,\n                resData.födelseår,\n                resData.körkort,\n                resData.bil,\n                resData.mat,\n                resData.varor,\n                resData.ärenden,\n                resData.djur,\n                resData.prata,\n                resData.myndigheter,\n                resData.teknik,\n                resData.grupp,\n                resData.datum,\n                resData.status,\n                resData.kommentarer,\n                resData.skickadVolontärTillGrupp,\n                resData.skickadBekräftelseTillVolontär\n              )\n            );\n          });\n        });\n\n      console.log('****** VOLONTÄRER - REDUX APPROACH (preferred) ******');\n      console.log('---------store/actions/volunteers.js---------');\n      console.log(\n        'data received from firebase and passed through model THIS WORKS: ',\n        loadedVolunteers\n      );\n\n      dispatch({\n        type: SET_VOLUNTEERS,\n        volunteers: loadedVolunteers,\n      });\n    } catch (err) {\n      // send to custom analytics server\n      throw err;\n    }\n  };\n};\n\nexport const deleteVolunteer = (volunteerId) => {\n  return async (dispatch, getState) => {\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/volunteers/${volunteerId}.json`,\n      {\n        method: 'DELETE',\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n    dispatch({ type: DELETE_VOLUNTEER, oid: volunteerId });\n  };\n};\n\nexport const createVolunteer = (\n  förnamn,\n  efternamn,\n  telefon,\n  email,\n  address,\n  postkod,\n  beskrivning,\n  körkort,\n  bil,\n  mat,\n  varor,\n  ärenden,\n  djur,\n  prata,\n  myndigheter,\n  teknik\n) => {\n  return async (dispatch) => {\n    const setDatum = new Date().getTime();\n    const setGrupp = '';\n    const setStatus = '1';\n\n    const db = firebase.firestore();\n    const response = await db.collection('volunteers').add({\n      förnamn,\n      efternamn,\n      telefon,\n      email,\n      address,\n      postkod,\n      beskrivning,\n      körkort,\n      bil,\n      mat,\n      varor,\n      ärenden,\n      djur,\n      prata,\n      myndigheter,\n      teknik,\n      grupp: setGrupp,\n      datum: setDatum,\n      status: setStatus,\n    });\n\n    const resData = await response.json();\n    console.log('resData efter post/fetch firebase:', resData);\n    console.log('-------------------END-----------');\n\n    dispatch({\n      type: CREATE_VOLUNTEER,\n      volunteerData: {\n        id: resData.name,\n        förnamn,\n        efternamn,\n        telefon,\n        email,\n        address,\n        postkod,\n        beskrivning,\n        körkort,\n        bil,\n        mat,\n        varor,\n        ärenden,\n        djur,\n        prata,\n        myndigheter,\n        teknik,\n        grupp: setGrupp,\n        datum: setDatum,\n        status: setStatus,\n      },\n    });\n  };\n};\n\nexport const updateVolunteer = (\n  id,\n  förnamn,\n  efternamn,\n  telefon,\n  email,\n  address,\n  postkod,\n  beskrivning,\n  körkort,\n  bil,\n  mat,\n  varor,\n  ärenden,\n  djur,\n  prata,\n  myndigheter,\n  teknik,\n  grupp,\n  status\n) => {\n  return async (dispatch) => {\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/volunteers/${id}.json`,\n      {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          förnamn,\n          efternamn,\n          telefon,\n          email,\n          address,\n          postkod,\n          beskrivning,\n          körkort,\n          bil,\n          mat,\n          varor,\n          ärenden,\n          djur,\n          prata,\n          myndigheter,\n          teknik,\n          grupp,\n          status,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    dispatch({\n      type: UPDATE_VOLUNTEER,\n      oid: id,\n      volunteerData: {\n        förnamn,\n        efternamn,\n        telefon,\n        email,\n        address,\n        postkod,\n        beskrivning,\n        körkort,\n        bil,\n        mat,\n        varor,\n        ärenden,\n        djur,\n        prata,\n        myndigheter,\n        teknik,\n        grupp,\n        status,\n      },\n    });\n  };\n};\n","import Group from '../../models/group';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport moment from 'moment';\n\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const SET_GROUPS = 'SET_GROUPS';\n\nexport const fetchGroups = () => {\n  return async (dispatch) => {\n    //Getting data from firestore\n    const firestore = firebase.firestore();\n\n    try {\n      const loadedGroups = [];\n\n      firestore\n        .collection('groups')\n        .get()\n        .then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            // doc.data() is never undefined for query doc snapshots\n            const resData = doc.data();\n            const readableDate = moment(new Date(resData.datum)).format('lll');\n            loadedGroups.push(\n              new Group(\n                doc.id,\n                readableDate,\n                resData.gruppnamn,\n                resData.länkNamn,\n                resData.kontakt,\n                resData.kommentarer,\n                resData.telefon,\n                resData.email,\n                resData.reserv,\n                resData.reservTelefon,\n                resData.reservEmail,\n                resData.address,\n                resData.postkod,\n                resData.status,\n                resData.adminNamn,\n                resData.adminPwd\n              )\n            );\n          });\n        });\n\n      dispatch({\n        type: SET_GROUPS,\n        groups: loadedGroups,\n      });\n    } catch (err) {\n      // send to custom analytics server\n      throw err;\n    }\n  };\n};\n\nexport const deleteGroup = (groupId) => {\n  return async (dispatch, getState) => {\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/groups/${groupId}.json`,\n      {\n        method: 'DELETE',\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n    dispatch({ type: DELETE_GROUP, oid: groupId });\n  };\n};\n\nexport const createGroup = (\n  typ,\n  beskrivning,\n  tidsrymd,\n  telefon,\n  förnamn,\n  efternamn,\n  email,\n  address,\n  postkod\n) => {\n  return async (dispatch, getState) => {\n    console.log('------createGroup was triggered-------');\n    console.log('received data:');\n    console.log('typ:', typ);\n    console.log('beskrivning:', beskrivning);\n    console.log('tidsrymd:', tidsrymd);\n    console.log('telefon:', telefon);\n    console.log('förnamn:', förnamn);\n    console.log('efternamn:', efternamn);\n    console.log('email:', email);\n    console.log('address:', address);\n    console.log('postkod:', postkod);\n    console.log('---------');\n\n    const setDatum = new Date().getTime();\n    const setGrupp = '';\n    const setStatus = '1';\n\n    const db = firebase.firestore();\n    const response = await db.collection('groups').add({\n      typ: typ,\n      beskrivning: beskrivning,\n      tidsrymd: tidsrymd,\n      telefon: telefon,\n      förnamn: förnamn,\n      efternamn: efternamn,\n      email: email,\n      address: address,\n      grupp: setGrupp,\n      datum: setDatum,\n      status: setStatus,\n    });\n\n    const resData = await response.json();\n    console.log('resData efter post/fetch firebase:', resData);\n    console.log('-------------------END-----------');\n\n    dispatch({\n      type: CREATE_GROUP,\n      groupData: {\n        id: resData.name,\n        datum: setDatum,\n        typ,\n        beskrivning,\n        tidsrymd,\n        telefon,\n        förnamn,\n        efternamn,\n        email,\n        address,\n        postkod,\n        grupp: setGrupp,\n        status: setStatus,\n      },\n    });\n  };\n};\n\nexport const updateGroup = (\n  id,\n  typ,\n  beskrivning,\n  tidsrymd,\n  telefon,\n  förnamn,\n  efternamn,\n  email,\n  address,\n  postkod,\n  grupp,\n  status\n) => {\n  return async (dispatch, getState) => {\n    // const token = getState().auth.token;\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/groups/${id}.json`,\n      // `https://sverige-tillsammans.firebaseio.com/groups/${id}.json?auth=${token}`,\n      {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          typ,\n          beskrivning,\n          tidsrymd,\n          telefon,\n          förnamn,\n          efternamn,\n          email,\n          address,\n          postkod,\n          grupp,\n          status,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    dispatch({\n      type: UPDATE_GROUP,\n      oid: id,\n      groupData: {\n        typ,\n        beskrivning,\n        tidsrymd,\n        telefon,\n        förnamn,\n        efternamn,\n        email,\n        address,\n        postkod,\n        grupp,\n        status,\n      },\n    });\n  };\n};\n","import Cancellation from '../../models/cancellation';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport moment from 'moment';\n\nexport const DELETE_CANCELLATION = 'DELETE_CANCELLATION';\nexport const CREATE_CANCELLATION = 'CREATE_CANCELLATION';\nexport const UPDATE_CANCELLATION = 'UPDATE_CANCELLATION';\nexport const SET_CANCELLATIONS = 'SET_CANCELLATIONS';\n\nexport const fetchCancellations = () => {\n  return async dispatch => {\n    //Getting data from firestore\n    const firestore = firebase.firestore();\n\n    try {\n      const loadedCancellations = [];\n\n      firestore\n        .collection('cancellations')\n        .get()\n        .then(function(querySnapshot) {\n          querySnapshot.forEach(function(doc) {\n            // doc.data() is never undefined for query doc snapshots\n            const resData = doc.data();\n            const readableDate = moment(new Date(resData.datum)).format('lll');\n            loadedCancellations.push(\n              new Cancellation(\n                doc.id,\n                readableDate,\n                resData.telefon,\n                resData.email,\n                resData.address,\n                resData.postkod,\n                resData.status\n              )\n            );\n          });\n        });\n\n      dispatch({\n        type: SET_CANCELLATIONS,\n        cancellations: loadedCancellations\n      });\n    } catch (err) {\n      // send to custom analytics server\n      throw err;\n    }\n  };\n};\n\n// console.log('doc.id: ', doc.id);\n// console.log('readableDate: ', readableDate);\n// console.log('resData.typ: ', resData.typ);\n// console.log('resData.beskrivning: ', resData.beskrivning);\n// console.log('resData.tidsrymd: ', resData.tidsrymd);\n// console.log('resData.telefon: ', resData.telefon);\n// console.log('resData.förnamn: ', resData.förnamn);\n// console.log('resData.efternamn: ', resData.efternamn);\n// console.log('resData.email: ', resData.email);\n// console.log('resData.address: ', resData.address);\n// console.log('resData.gruppId: ', resData.gruppId);\n// console.log('resData.status: ', resData.status);\n\nexport const deleteCancellation = cancellationId => {\n  return async (dispatch, getState) => {\n    // const token = getState().auth.token; //TODO: set up authorisation of admin\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/cancellations/${cancellationId}.json`,\n      // `https://sverige-tillsammans.firebaseio.com/cancellations/${cancellationId}.json?auth=${token}`,\n      {\n        method: 'DELETE'\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n    dispatch({ type: DELETE_CANCELLATION, oid: cancellationId });\n  };\n};\n\nexport const createCancellation = (\n  typ,\n  beskrivning,\n  tidsrymd,\n  telefon,\n  förnamn,\n  efternamn,\n  email,\n  address,\n  postkod\n) => {\n  return async (dispatch, getState) => {\n    console.log('------createCancellation was triggered-------');\n    console.log('received data:');\n    console.log('typ:', typ);\n    console.log('beskrivning:', beskrivning);\n    console.log('tidsrymd:', tidsrymd);\n    console.log('telefon:', telefon);\n    console.log('förnamn:', förnamn);\n    console.log('efternamn:', efternamn);\n    console.log('email:', email);\n    console.log('address:', address);\n    console.log('postkod:', postkod);\n    console.log('---------');\n\n    const setDatum = new Date().getTime();\n    const setGrupp = '';\n    const setStatus = '1';\n\n    const db = firebase.firestore();\n    const response = await db.collection('cancellations').add({\n      typ: typ,\n      beskrivning: beskrivning,\n      tidsrymd: tidsrymd,\n      telefon: telefon,\n      förnamn: förnamn,\n      efternamn: efternamn,\n      email: email,\n      address: address,\n      grupp: setGrupp,\n      datum: setDatum,\n      status: setStatus\n    });\n\n    // const response = await fetch(\n    //   `https://sverige-tillsammans.firebaseio.com/cancellations.json`,\n    //   // `https://sverige-tillsammans.firebaseio.com/cancellations.json?auth=${token}`,\n    //   {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //       datum: setDatum,\n    //       typ,\n    //       beskrivning,\n    //       tidsrymd,\n    //       telefon,\n    //       förnamn,\n    //       efternamn,\n    //       email,\n    //       address,\n    //       postkod,\n    //       grupp: setGrupp,\n    //       status: setStatus\n    //     })\n    //   }\n    // );\n\n    const resData = await response.json();\n    console.log('resData efter post/fetch firebase:', resData);\n    console.log('-------------------END-----------');\n\n    dispatch({\n      type: CREATE_CANCELLATION,\n      cancellationData: {\n        id: resData.name,\n        datum: setDatum,\n        typ,\n        beskrivning,\n        tidsrymd,\n        telefon,\n        förnamn,\n        efternamn,\n        email,\n        address,\n        postkod,\n        grupp: setGrupp,\n        status: setStatus\n      }\n    });\n  };\n};\n\nexport const updateCancellation = (\n  id,\n  typ,\n  beskrivning,\n  tidsrymd,\n  telefon,\n  förnamn,\n  efternamn,\n  email,\n  address,\n  postkod,\n  grupp,\n  status\n) => {\n  return async (dispatch, getState) => {\n    // const token = getState().auth.token;\n    const response = await fetch(\n      `https://sverige-tillsammans.firebaseio.com/cancellations/${id}.json`,\n      // `https://sverige-tillsammans.firebaseio.com/cancellations/${id}.json?auth=${token}`,\n      {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          typ,\n          beskrivning,\n          tidsrymd,\n          telefon,\n          förnamn,\n          efternamn,\n          email,\n          address,\n          postkod,\n          grupp,\n          status\n        })\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    dispatch({\n      type: UPDATE_CANCELLATION,\n      oid: id,\n      cancellationData: {\n        typ,\n        beskrivning,\n        tidsrymd,\n        telefon,\n        förnamn,\n        efternamn,\n        email,\n        address,\n        postkod,\n        grupp,\n        status\n      }\n    });\n  };\n};\n","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILURE,\n    VERIFY_REQUEST,\n    VERIFY_SUCCESS\n  } from \"../actions/auth\";\n  \n  export default (\n    state = {\n      isLoggingIn: false,\n      isLoggingOut: false,\n      isVerifying: false,\n      loginError: false,\n      logoutError: false,\n      isAuthenticated: false,\n      user: {}\n    },\n    action\n  ) => {\n    switch (action.type) {\n      case LOGIN_REQUEST:\n        return {\n          ...state,\n          isLoggingIn: true,\n          loginError: false\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggingIn: false,\n          isAuthenticated: true,\n          user: action.user\n        };\n      case LOGIN_FAILURE:\n        return {\n          ...state,\n          isLoggingIn: false,\n          isAuthenticated: false,\n          loginError: true\n        };\n      case LOGOUT_REQUEST:\n        return {\n          ...state,\n          isLoggingOut: true,\n          logoutError: false\n        };\n      case LOGOUT_SUCCESS:\n        return {\n          ...state,\n          isLoggingOut: false,\n          isAuthenticated: false,\n          user: {}\n        };\n      case LOGOUT_FAILURE:\n        return {\n          ...state,\n          isLoggingOut: false,\n          logoutError: true\n        };\n      case VERIFY_REQUEST:\n        return {\n          ...state,\n          isVerifying: true,\n          verifyingError: false\n        };\n      case VERIFY_SUCCESS:\n        return {\n          ...state,\n          isVerifying: false\n        };\n      default:\n        return state;\n    }\n  };","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore();\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default Root;","import { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { verifyAuth } from \"./store/actions/\";\nimport rootReducer from \"./store/reducers\";\n\nexport default function configureStore(persistedState) {\n    const store = createStore(\n      rootReducer,\n      persistedState,\n      applyMiddleware(thunkMiddleware)\n    );\n    store.dispatch(verifyAuth());\n    return store;\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}